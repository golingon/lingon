-- out/provider.go --
// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package cidaas

import "github.com/golingon/lingon/pkg/terra"

var _ terra.Provider = (*Provider)(nil)

// Provider contains the configurations for provider.
type Provider struct {
	// BaseUrl: string, required
	BaseUrl terra.StringValue `hcl:"base_url,attr" validate:"required"`
}

// LocalName returns the provider local name for [Provider].
func (p *Provider) LocalName() string {
	return "cidaas"
}

// Source returns the provider source for [Provider].
func (p *Provider) Source() string {
	return "cidaas/cidaas"
}

// Version returns the provider version for [Provider].
func (p *Provider) Version() string {
	return "3.1.2"
}

// Configuration returns the provider configuration for [Provider].
func (p *Provider) Configuration() interface{} {
	return p
}
-- out/cidaas_app/cidaas_app.go --
// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package cidaas_app

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource cidaas_app.
type Resource struct {
	Name      string
	Args      Args
	state     *cidaasAppState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ca *Resource) Type() string {
	return "cidaas_app"
}

// LocalName returns the local name for [Resource].
func (ca *Resource) LocalName() string {
	return ca.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ca *Resource) Configuration() interface{} {
	return ca.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ca *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ca)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ca *Resource) Dependencies() terra.Dependencies {
	return ca.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ca *Resource) LifecycleManagement() *terra.Lifecycle {
	return ca.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ca *Resource) Attributes() cidaasAppAttributes {
	return cidaasAppAttributes{ref: terra.ReferenceResource(ca)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ca *Resource) ImportState(state io.Reader) error {
	ca.state = &cidaasAppState{}
	if err := json.NewDecoder(state).Decode(ca.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ca.Type(), ca.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ca *Resource) State() (*cidaasAppState, bool) {
	return ca.state, ca.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ca *Resource) StateMust() *cidaasAppState {
	if ca.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ca.Type(), ca.LocalName()))
	}
	return ca.state
}

// Args contains the configurations for cidaas_app.
type Args struct {
	// AccentColor: string, optional
	AccentColor terra.StringValue `hcl:"accent_color,attr"`
	// AdditionalAccessTokenPayload: set of string, optional
	AdditionalAccessTokenPayload terra.SetValue[terra.StringValue] `hcl:"additional_access_token_payload,attr"`
	// AllowDisposableEmail: bool, optional
	AllowDisposableEmail terra.BoolValue `hcl:"allow_disposable_email,attr"`
	// AllowGuestLogin: bool, optional
	AllowGuestLogin terra.BoolValue `hcl:"allow_guest_login,attr"`
	// AllowLoginWith: set of string, optional
	AllowLoginWith terra.SetValue[terra.StringValue] `hcl:"allow_login_with,attr"`
	// AllowedFields: set of string, optional
	AllowedFields terra.SetValue[terra.StringValue] `hcl:"allowed_fields,attr"`
	// AllowedLogoutUrls: set of string, optional
	AllowedLogoutUrls terra.SetValue[terra.StringValue] `hcl:"allowed_logout_urls,attr"`
	// AllowedMfa: set of string, optional
	AllowedMfa terra.SetValue[terra.StringValue] `hcl:"allowed_mfa,attr"`
	// AllowedOrigins: set of string, optional
	AllowedOrigins terra.SetValue[terra.StringValue] `hcl:"allowed_origins,attr"`
	// AllowedRoles: set of string, optional
	AllowedRoles terra.SetValue[terra.StringValue] `hcl:"allowed_roles,attr"`
	// AllowedScopes: set of string, optional
	AllowedScopes terra.SetValue[terra.StringValue] `hcl:"allowed_scopes,attr"`
	// AllowedWebOrigins: set of string, optional
	AllowedWebOrigins terra.SetValue[terra.StringValue] `hcl:"allowed_web_origins,attr"`
	// AlwaysAskMfa: bool, optional
	AlwaysAskMfa terra.BoolValue `hcl:"always_ask_mfa,attr"`
	// ApplicationMetaData: map of string, optional
	ApplicationMetaData terra.MapValue[terra.StringValue] `hcl:"application_meta_data,attr"`
	// AutoLoginAfterRegister: bool, optional
	AutoLoginAfterRegister terra.BoolValue `hcl:"auto_login_after_register,attr"`
	// BackchannelLogoutUri: string, optional
	BackchannelLogoutUri terra.StringValue `hcl:"backchannel_logout_uri,attr"`
	// BackgroundUri: string, optional
	BackgroundUri terra.StringValue `hcl:"background_uri,attr"`
	// BlockingMechanismRef: string, optional
	BlockingMechanismRef terra.StringValue `hcl:"blocking_mechanism_ref,attr"`
	// BotCaptchaRef: string, optional
	BotCaptchaRef terra.StringValue `hcl:"bot_captcha_ref,attr"`
	// BotProvider: string, optional
	BotProvider terra.StringValue `hcl:"bot_provider,attr"`
	// CaptchaRef: string, optional
	CaptchaRef terra.StringValue `hcl:"captcha_ref,attr"`
	// CaptchaRefs: set of string, optional
	CaptchaRefs terra.SetValue[terra.StringValue] `hcl:"captcha_refs,attr"`
	// ClientDisplayName: string, optional
	ClientDisplayName terra.StringValue `hcl:"client_display_name,attr"`
	// ClientId: string, optional
	ClientId terra.StringValue `hcl:"client_id,attr"`
	// ClientName: string, required
	ClientName terra.StringValue `hcl:"client_name,attr" validate:"required"`
	// ClientSecret: string, optional
	ClientSecret terra.StringValue `hcl:"client_secret,attr"`
	// ClientType: string, optional
	ClientType terra.StringValue `hcl:"client_type,attr"`
	// ClientUri: string, optional
	ClientUri terra.StringValue `hcl:"client_uri,attr"`
	// CommunicationMediumVerification: string, optional
	CommunicationMediumVerification terra.StringValue `hcl:"communication_medium_verification,attr"`
	// CompanyAddress: string, optional
	CompanyAddress terra.StringValue `hcl:"company_address,attr"`
	// CompanyName: string, optional
	CompanyName terra.StringValue `hcl:"company_name,attr"`
	// CompanyWebsite: string, optional
	CompanyWebsite terra.StringValue `hcl:"company_website,attr"`
	// ConsentPageGroup: string, optional
	ConsentPageGroup terra.StringValue `hcl:"consent_page_group,attr"`
	// ConsentRefs: set of string, optional
	ConsentRefs terra.SetValue[terra.StringValue] `hcl:"consent_refs,attr"`
	// Contacts: set of string, optional
	Contacts terra.SetValue[terra.StringValue] `hcl:"contacts,attr"`
	// ContentAlign: string, optional
	ContentAlign terra.StringValue `hcl:"content_align,attr"`
	// DefaultAcrValues: set of string, optional
	DefaultAcrValues terra.SetValue[terra.StringValue] `hcl:"default_acr_values,attr"`
	// DefaultMaxAge: number, optional
	DefaultMaxAge terra.NumberValue `hcl:"default_max_age,attr"`
	// DefaultRoles: set of string, optional
	DefaultRoles terra.SetValue[terra.StringValue] `hcl:"default_roles,attr"`
	// DefaultScopes: set of string, optional
	DefaultScopes terra.SetValue[terra.StringValue] `hcl:"default_scopes,attr"`
	// Description: string, optional
	Description terra.StringValue `hcl:"description,attr"`
	// Editable: bool, optional
	Editable terra.BoolValue `hcl:"editable,attr"`
	// EmailVerificationRequired: bool, optional
	EmailVerificationRequired terra.BoolValue `hcl:"email_verification_required,attr"`
	// EnableBotDetection: bool, optional
	EnableBotDetection terra.BoolValue `hcl:"enable_bot_detection,attr"`
	// EnableClassicalProvider: bool, optional
	EnableClassicalProvider terra.BoolValue `hcl:"enable_classical_provider,attr"`
	// EnableDeduplication: bool, optional
	EnableDeduplication terra.BoolValue `hcl:"enable_deduplication,attr"`
	// EnablePasswordlessAuth: bool, optional
	EnablePasswordlessAuth terra.BoolValue `hcl:"enable_passwordless_auth,attr"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// FdsEnabled: bool, optional
	FdsEnabled terra.BoolValue `hcl:"fds_enabled,attr"`
	// GrantTypes: set of string, optional
	GrantTypes terra.SetValue[terra.StringValue] `hcl:"grant_types,attr"`
	// GroupIds: set of string, optional
	GroupIds terra.SetValue[terra.StringValue] `hcl:"group_ids,attr"`
	// GroupTypes: set of string, optional
	GroupTypes terra.SetValue[terra.StringValue] `hcl:"group_types,attr"`
	// HostedPageGroup: string, optional
	HostedPageGroup terra.StringValue `hcl:"hosted_page_group,attr"`
	// IdTokenEncryptedResponseAlg: string, optional
	IdTokenEncryptedResponseAlg terra.StringValue `hcl:"id_token_encrypted_response_alg,attr"`
	// IdTokenEncryptedResponseEnc: string, optional
	IdTokenEncryptedResponseEnc terra.StringValue `hcl:"id_token_encrypted_response_enc,attr"`
	// IdTokenLifetimeInSeconds: number, optional
	IdTokenLifetimeInSeconds terra.NumberValue `hcl:"id_token_lifetime_in_seconds,attr"`
	// IdTokenSignedResponseAlg: string, optional
	IdTokenSignedResponseAlg terra.StringValue `hcl:"id_token_signed_response_alg,attr"`
	// ImprintUri: string, optional
	ImprintUri terra.StringValue `hcl:"imprint_uri,attr"`
	// InitiateLoginUri: string, optional
	InitiateLoginUri terra.StringValue `hcl:"initiate_login_uri,attr"`
	// IsGroupLoginSelectionEnabled: bool, optional
	IsGroupLoginSelectionEnabled terra.BoolValue `hcl:"is_group_login_selection_enabled,attr"`
	// IsHybridApp: bool, optional
	IsHybridApp terra.BoolValue `hcl:"is_hybrid_app,attr"`
	// IsLoginSuccessPageEnabled: bool, optional
	IsLoginSuccessPageEnabled terra.BoolValue `hcl:"is_login_success_page_enabled,attr"`
	// IsRegisterSuccessPageEnabled: bool, optional
	IsRegisterSuccessPageEnabled terra.BoolValue `hcl:"is_register_success_page_enabled,attr"`
	// IsRememberMeSelected: bool, optional
	IsRememberMeSelected terra.BoolValue `hcl:"is_remember_me_selected,attr"`
	// JweEnabled: bool, optional
	JweEnabled terra.BoolValue `hcl:"jwe_enabled,attr"`
	// Jwks: string, optional
	Jwks terra.StringValue `hcl:"jwks,attr"`
	// JwksUri: string, optional
	JwksUri terra.StringValue `hcl:"jwks_uri,attr"`
	// LoginProviders: set of string, optional
	LoginProviders terra.SetValue[terra.StringValue] `hcl:"login_providers,attr"`
	// LogoAlign: string, optional
	LogoAlign terra.StringValue `hcl:"logo_align,attr"`
	// LogoUri: string, optional
	LogoUri terra.StringValue `hcl:"logo_uri,attr"`
	// MediaType: string, optional
	MediaType terra.StringValue `hcl:"media_type,attr"`
	// MfaConfiguration: string, optional
	MfaConfiguration terra.StringValue `hcl:"mfa_configuration,attr"`
	// MobileNumberVerificationRequired: bool, optional
	MobileNumberVerificationRequired terra.BoolValue `hcl:"mobile_number_verification_required,attr"`
	// PasswordPolicyRef: string, optional
	PasswordPolicyRef terra.StringValue `hcl:"password_policy_ref,attr"`
	// PendingScopes: set of string, optional
	PendingScopes terra.SetValue[terra.StringValue] `hcl:"pending_scopes,attr"`
	// PolicyUri: string, optional
	PolicyUri terra.StringValue `hcl:"policy_uri,attr"`
	// PostLogoutRedirectUris: set of string, optional
	PostLogoutRedirectUris terra.SetValue[terra.StringValue] `hcl:"post_logout_redirect_uris,attr"`
	// PrimaryColor: string, optional
	PrimaryColor terra.StringValue `hcl:"primary_color,attr"`
	// RedirectUris: set of string, optional
	RedirectUris terra.SetValue[terra.StringValue] `hcl:"redirect_uris,attr"`
	// RefreshTokenLifetimeInSeconds: number, optional
	RefreshTokenLifetimeInSeconds terra.NumberValue `hcl:"refresh_token_lifetime_in_seconds,attr"`
	// RegisterWithLoginInformation: bool, optional
	RegisterWithLoginInformation terra.BoolValue `hcl:"register_with_login_information,attr"`
	// RegistrationAccessToken: string, optional
	RegistrationAccessToken terra.StringValue `hcl:"registration_access_token,attr"`
	// RegistrationClientUri: string, optional
	RegistrationClientUri terra.StringValue `hcl:"registration_client_uri,attr"`
	// RequestObjectEncryptionAlg: string, optional
	RequestObjectEncryptionAlg terra.StringValue `hcl:"request_object_encryption_alg,attr"`
	// RequestObjectEncryptionEnc: string, optional
	RequestObjectEncryptionEnc terra.StringValue `hcl:"request_object_encryption_enc,attr"`
	// RequestObjectSigningAlg: string, optional
	RequestObjectSigningAlg terra.StringValue `hcl:"request_object_signing_alg,attr"`
	// RequestUris: set of string, optional
	RequestUris terra.SetValue[terra.StringValue] `hcl:"request_uris,attr"`
	// RequiredFields: set of string, optional
	RequiredFields terra.SetValue[terra.StringValue] `hcl:"required_fields,attr"`
	// ResponseTypes: set of string, optional
	ResponseTypes terra.SetValue[terra.StringValue] `hcl:"response_types,attr"`
	// Role: string, optional
	Role terra.StringValue `hcl:"role,attr"`
	// SectorIdentifierUri: string, optional
	SectorIdentifierUri terra.StringValue `hcl:"sector_identifier_uri,attr"`
	// SmartMfa: bool, optional
	SmartMfa terra.BoolValue `hcl:"smart_mfa,attr"`
	// Sub: string, optional
	Sub terra.StringValue `hcl:"sub,attr"`
	// SubjectType: string, optional
	SubjectType terra.StringValue `hcl:"subject_type,attr"`
	// SuggestMfa: set of string, optional
	SuggestMfa terra.SetValue[terra.StringValue] `hcl:"suggest_mfa,attr"`
	// TemplateGroupId: string, optional
	TemplateGroupId terra.StringValue `hcl:"template_group_id,attr"`
	// TokenEndpointAuthMethod: string, optional
	TokenEndpointAuthMethod terra.StringValue `hcl:"token_endpoint_auth_method,attr"`
	// TokenEndpointAuthSigningAlg: string, optional
	TokenEndpointAuthSigningAlg terra.StringValue `hcl:"token_endpoint_auth_signing_alg,attr"`
	// TokenLifetimeInSeconds: number, optional
	TokenLifetimeInSeconds terra.NumberValue `hcl:"token_lifetime_in_seconds,attr"`
	// TosUri: string, optional
	TosUri terra.StringValue `hcl:"tos_uri,attr"`
	// UserConsent: bool, optional
	UserConsent terra.BoolValue `hcl:"user_consent,attr"`
	// UserinfoEncryptedResponseAlg: string, optional
	UserinfoEncryptedResponseAlg terra.StringValue `hcl:"userinfo_encrypted_response_alg,attr"`
	// UserinfoEncryptedResponseEnc: string, optional
	UserinfoEncryptedResponseEnc terra.StringValue `hcl:"userinfo_encrypted_response_enc,attr"`
	// UserinfoSignedResponseAlg: string, optional
	UserinfoSignedResponseAlg terra.StringValue `hcl:"userinfo_signed_response_alg,attr"`
	// ValidatePhoneNumber: bool, optional
	ValidatePhoneNumber terra.BoolValue `hcl:"validate_phone_number,attr"`
	// VideoUrl: string, optional
	VideoUrl terra.StringValue `hcl:"video_url,attr"`
	// WebMessageUris: set of string, optional
	WebMessageUris terra.SetValue[terra.StringValue] `hcl:"web_message_uris,attr"`
	// Webfinger: string, optional
	Webfinger terra.StringValue `hcl:"webfinger,attr"`
	// AdProviders: min=0
	AdProviders []AdProviders `hcl:"ad_providers,attr" validate:"min=0"`
	// AllowGuestLoginGroups: min=0
	AllowGuestLoginGroups []AllowGuestLoginGroups `hcl:"allow_guest_login_groups,attr" validate:"min=0"`
	// AllowedGroups: min=0
	AllowedGroups []AllowedGroups `hcl:"allowed_groups,attr" validate:"min=0"`
	// CommonConfigs: optional
	CommonConfigs *CommonConfigs `hcl:"common_configs,attr"`
	// CustomProviders: min=0
	CustomProviders []CustomProviders `hcl:"custom_providers,attr" validate:"min=0"`
	// GroupSelection: optional
	GroupSelection *GroupSelection `hcl:"group_selection,attr"`
	// LoginSpi: optional
	LoginSpi *LoginSpi `hcl:"login_spi,attr"`
	// Mfa: optional
	Mfa *Mfa `hcl:"mfa,attr"`
	// MobileSettings: optional
	MobileSettings *MobileSettings `hcl:"mobile_settings,attr"`
	// OperationsAllowedGroups: min=0
	OperationsAllowedGroups []OperationsAllowedGroups `hcl:"operations_allowed_groups,attr" validate:"min=0"`
	// SamlProviders: min=0
	SamlProviders []SamlProviders `hcl:"saml_providers,attr" validate:"min=0"`
	// SocialProviders: min=0
	SocialProviders []SocialProviders `hcl:"social_providers,attr" validate:"min=0"`
}

type cidaasAppAttributes struct {
	ref terra.Reference
}

// AccentColor returns a reference to field accent_color of cidaas_app.
func (ca cidaasAppAttributes) AccentColor() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("accent_color"))
}

// AdditionalAccessTokenPayload returns a reference to field additional_access_token_payload of cidaas_app.
func (ca cidaasAppAttributes) AdditionalAccessTokenPayload() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ca.ref.Append("additional_access_token_payload"))
}

// AllowDisposableEmail returns a reference to field allow_disposable_email of cidaas_app.
func (ca cidaasAppAttributes) AllowDisposableEmail() terra.BoolValue {
	return terra.ReferenceAsBool(ca.ref.Append("allow_disposable_email"))
}

// AllowGuestLogin returns a reference to field allow_guest_login of cidaas_app.
func (ca cidaasAppAttributes) AllowGuestLogin() terra.BoolValue {
	return terra.ReferenceAsBool(ca.ref.Append("allow_guest_login"))
}

// AllowLoginWith returns a reference to field allow_login_with of cidaas_app.
func (ca cidaasAppAttributes) AllowLoginWith() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ca.ref.Append("allow_login_with"))
}

// AllowedFields returns a reference to field allowed_fields of cidaas_app.
func (ca cidaasAppAttributes) AllowedFields() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ca.ref.Append("allowed_fields"))
}

// AllowedLogoutUrls returns a reference to field allowed_logout_urls of cidaas_app.
func (ca cidaasAppAttributes) AllowedLogoutUrls() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ca.ref.Append("allowed_logout_urls"))
}

// AllowedMfa returns a reference to field allowed_mfa of cidaas_app.
func (ca cidaasAppAttributes) AllowedMfa() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ca.ref.Append("allowed_mfa"))
}

// AllowedOrigins returns a reference to field allowed_origins of cidaas_app.
func (ca cidaasAppAttributes) AllowedOrigins() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ca.ref.Append("allowed_origins"))
}

// AllowedRoles returns a reference to field allowed_roles of cidaas_app.
func (ca cidaasAppAttributes) AllowedRoles() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ca.ref.Append("allowed_roles"))
}

// AllowedScopes returns a reference to field allowed_scopes of cidaas_app.
func (ca cidaasAppAttributes) AllowedScopes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ca.ref.Append("allowed_scopes"))
}

// AllowedWebOrigins returns a reference to field allowed_web_origins of cidaas_app.
func (ca cidaasAppAttributes) AllowedWebOrigins() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ca.ref.Append("allowed_web_origins"))
}

// AlwaysAskMfa returns a reference to field always_ask_mfa of cidaas_app.
func (ca cidaasAppAttributes) AlwaysAskMfa() terra.BoolValue {
	return terra.ReferenceAsBool(ca.ref.Append("always_ask_mfa"))
}

// ApplicationMetaData returns a reference to field application_meta_data of cidaas_app.
func (ca cidaasAppAttributes) ApplicationMetaData() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](ca.ref.Append("application_meta_data"))
}

// AutoLoginAfterRegister returns a reference to field auto_login_after_register of cidaas_app.
func (ca cidaasAppAttributes) AutoLoginAfterRegister() terra.BoolValue {
	return terra.ReferenceAsBool(ca.ref.Append("auto_login_after_register"))
}

// BackchannelLogoutUri returns a reference to field backchannel_logout_uri of cidaas_app.
func (ca cidaasAppAttributes) BackchannelLogoutUri() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("backchannel_logout_uri"))
}

// BackgroundUri returns a reference to field background_uri of cidaas_app.
func (ca cidaasAppAttributes) BackgroundUri() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("background_uri"))
}

// BlockingMechanismRef returns a reference to field blocking_mechanism_ref of cidaas_app.
func (ca cidaasAppAttributes) BlockingMechanismRef() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("blocking_mechanism_ref"))
}

// BotCaptchaRef returns a reference to field bot_captcha_ref of cidaas_app.
func (ca cidaasAppAttributes) BotCaptchaRef() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("bot_captcha_ref"))
}

// BotProvider returns a reference to field bot_provider of cidaas_app.
func (ca cidaasAppAttributes) BotProvider() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("bot_provider"))
}

// CaptchaRef returns a reference to field captcha_ref of cidaas_app.
func (ca cidaasAppAttributes) CaptchaRef() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("captcha_ref"))
}

// CaptchaRefs returns a reference to field captcha_refs of cidaas_app.
func (ca cidaasAppAttributes) CaptchaRefs() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ca.ref.Append("captcha_refs"))
}

// ClientDisplayName returns a reference to field client_display_name of cidaas_app.
func (ca cidaasAppAttributes) ClientDisplayName() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("client_display_name"))
}

// ClientId returns a reference to field client_id of cidaas_app.
func (ca cidaasAppAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("client_id"))
}

// ClientName returns a reference to field client_name of cidaas_app.
func (ca cidaasAppAttributes) ClientName() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("client_name"))
}

// ClientSecret returns a reference to field client_secret of cidaas_app.
func (ca cidaasAppAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("client_secret"))
}

// ClientType returns a reference to field client_type of cidaas_app.
func (ca cidaasAppAttributes) ClientType() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("client_type"))
}

// ClientUri returns a reference to field client_uri of cidaas_app.
func (ca cidaasAppAttributes) ClientUri() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("client_uri"))
}

// CommunicationMediumVerification returns a reference to field communication_medium_verification of cidaas_app.
func (ca cidaasAppAttributes) CommunicationMediumVerification() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("communication_medium_verification"))
}

// CompanyAddress returns a reference to field company_address of cidaas_app.
func (ca cidaasAppAttributes) CompanyAddress() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("company_address"))
}

// CompanyName returns a reference to field company_name of cidaas_app.
func (ca cidaasAppAttributes) CompanyName() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("company_name"))
}

// CompanyWebsite returns a reference to field company_website of cidaas_app.
func (ca cidaasAppAttributes) CompanyWebsite() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("company_website"))
}

// ConsentPageGroup returns a reference to field consent_page_group of cidaas_app.
func (ca cidaasAppAttributes) ConsentPageGroup() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("consent_page_group"))
}

// ConsentRefs returns a reference to field consent_refs of cidaas_app.
func (ca cidaasAppAttributes) ConsentRefs() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ca.ref.Append("consent_refs"))
}

// Contacts returns a reference to field contacts of cidaas_app.
func (ca cidaasAppAttributes) Contacts() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ca.ref.Append("contacts"))
}

// ContentAlign returns a reference to field content_align of cidaas_app.
func (ca cidaasAppAttributes) ContentAlign() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("content_align"))
}

// DefaultAcrValues returns a reference to field default_acr_values of cidaas_app.
func (ca cidaasAppAttributes) DefaultAcrValues() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ca.ref.Append("default_acr_values"))
}

// DefaultMaxAge returns a reference to field default_max_age of cidaas_app.
func (ca cidaasAppAttributes) DefaultMaxAge() terra.NumberValue {
	return terra.ReferenceAsNumber(ca.ref.Append("default_max_age"))
}

// DefaultRoles returns a reference to field default_roles of cidaas_app.
func (ca cidaasAppAttributes) DefaultRoles() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ca.ref.Append("default_roles"))
}

// DefaultScopes returns a reference to field default_scopes of cidaas_app.
func (ca cidaasAppAttributes) DefaultScopes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ca.ref.Append("default_scopes"))
}

// Description returns a reference to field description of cidaas_app.
func (ca cidaasAppAttributes) Description() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("description"))
}

// Editable returns a reference to field editable of cidaas_app.
func (ca cidaasAppAttributes) Editable() terra.BoolValue {
	return terra.ReferenceAsBool(ca.ref.Append("editable"))
}

// EmailVerificationRequired returns a reference to field email_verification_required of cidaas_app.
func (ca cidaasAppAttributes) EmailVerificationRequired() terra.BoolValue {
	return terra.ReferenceAsBool(ca.ref.Append("email_verification_required"))
}

// EnableBotDetection returns a reference to field enable_bot_detection of cidaas_app.
func (ca cidaasAppAttributes) EnableBotDetection() terra.BoolValue {
	return terra.ReferenceAsBool(ca.ref.Append("enable_bot_detection"))
}

// EnableClassicalProvider returns a reference to field enable_classical_provider of cidaas_app.
func (ca cidaasAppAttributes) EnableClassicalProvider() terra.BoolValue {
	return terra.ReferenceAsBool(ca.ref.Append("enable_classical_provider"))
}

// EnableDeduplication returns a reference to field enable_deduplication of cidaas_app.
func (ca cidaasAppAttributes) EnableDeduplication() terra.BoolValue {
	return terra.ReferenceAsBool(ca.ref.Append("enable_deduplication"))
}

// EnablePasswordlessAuth returns a reference to field enable_passwordless_auth of cidaas_app.
func (ca cidaasAppAttributes) EnablePasswordlessAuth() terra.BoolValue {
	return terra.ReferenceAsBool(ca.ref.Append("enable_passwordless_auth"))
}

// Enabled returns a reference to field enabled of cidaas_app.
func (ca cidaasAppAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(ca.ref.Append("enabled"))
}

// FdsEnabled returns a reference to field fds_enabled of cidaas_app.
func (ca cidaasAppAttributes) FdsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ca.ref.Append("fds_enabled"))
}

// GrantTypes returns a reference to field grant_types of cidaas_app.
func (ca cidaasAppAttributes) GrantTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ca.ref.Append("grant_types"))
}

// GroupIds returns a reference to field group_ids of cidaas_app.
func (ca cidaasAppAttributes) GroupIds() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ca.ref.Append("group_ids"))
}

// GroupTypes returns a reference to field group_types of cidaas_app.
func (ca cidaasAppAttributes) GroupTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ca.ref.Append("group_types"))
}

// HostedPageGroup returns a reference to field hosted_page_group of cidaas_app.
func (ca cidaasAppAttributes) HostedPageGroup() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("hosted_page_group"))
}

// Id returns a reference to field id of cidaas_app.
func (ca cidaasAppAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("id"))
}

// IdTokenEncryptedResponseAlg returns a reference to field id_token_encrypted_response_alg of cidaas_app.
func (ca cidaasAppAttributes) IdTokenEncryptedResponseAlg() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("id_token_encrypted_response_alg"))
}

// IdTokenEncryptedResponseEnc returns a reference to field id_token_encrypted_response_enc of cidaas_app.
func (ca cidaasAppAttributes) IdTokenEncryptedResponseEnc() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("id_token_encrypted_response_enc"))
}

// IdTokenLifetimeInSeconds returns a reference to field id_token_lifetime_in_seconds of cidaas_app.
func (ca cidaasAppAttributes) IdTokenLifetimeInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(ca.ref.Append("id_token_lifetime_in_seconds"))
}

// IdTokenSignedResponseAlg returns a reference to field id_token_signed_response_alg of cidaas_app.
func (ca cidaasAppAttributes) IdTokenSignedResponseAlg() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("id_token_signed_response_alg"))
}

// ImprintUri returns a reference to field imprint_uri of cidaas_app.
func (ca cidaasAppAttributes) ImprintUri() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("imprint_uri"))
}

// InitiateLoginUri returns a reference to field initiate_login_uri of cidaas_app.
func (ca cidaasAppAttributes) InitiateLoginUri() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("initiate_login_uri"))
}

// IsGroupLoginSelectionEnabled returns a reference to field is_group_login_selection_enabled of cidaas_app.
func (ca cidaasAppAttributes) IsGroupLoginSelectionEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ca.ref.Append("is_group_login_selection_enabled"))
}

// IsHybridApp returns a reference to field is_hybrid_app of cidaas_app.
func (ca cidaasAppAttributes) IsHybridApp() terra.BoolValue {
	return terra.ReferenceAsBool(ca.ref.Append("is_hybrid_app"))
}

// IsLoginSuccessPageEnabled returns a reference to field is_login_success_page_enabled of cidaas_app.
func (ca cidaasAppAttributes) IsLoginSuccessPageEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ca.ref.Append("is_login_success_page_enabled"))
}

// IsRegisterSuccessPageEnabled returns a reference to field is_register_success_page_enabled of cidaas_app.
func (ca cidaasAppAttributes) IsRegisterSuccessPageEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ca.ref.Append("is_register_success_page_enabled"))
}

// IsRememberMeSelected returns a reference to field is_remember_me_selected of cidaas_app.
func (ca cidaasAppAttributes) IsRememberMeSelected() terra.BoolValue {
	return terra.ReferenceAsBool(ca.ref.Append("is_remember_me_selected"))
}

// JweEnabled returns a reference to field jwe_enabled of cidaas_app.
func (ca cidaasAppAttributes) JweEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(ca.ref.Append("jwe_enabled"))
}

// Jwks returns a reference to field jwks of cidaas_app.
func (ca cidaasAppAttributes) Jwks() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("jwks"))
}

// JwksUri returns a reference to field jwks_uri of cidaas_app.
func (ca cidaasAppAttributes) JwksUri() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("jwks_uri"))
}

// LoginProviders returns a reference to field login_providers of cidaas_app.
func (ca cidaasAppAttributes) LoginProviders() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ca.ref.Append("login_providers"))
}

// LogoAlign returns a reference to field logo_align of cidaas_app.
func (ca cidaasAppAttributes) LogoAlign() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("logo_align"))
}

// LogoUri returns a reference to field logo_uri of cidaas_app.
func (ca cidaasAppAttributes) LogoUri() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("logo_uri"))
}

// MediaType returns a reference to field media_type of cidaas_app.
func (ca cidaasAppAttributes) MediaType() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("media_type"))
}

// MfaConfiguration returns a reference to field mfa_configuration of cidaas_app.
func (ca cidaasAppAttributes) MfaConfiguration() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("mfa_configuration"))
}

// MobileNumberVerificationRequired returns a reference to field mobile_number_verification_required of cidaas_app.
func (ca cidaasAppAttributes) MobileNumberVerificationRequired() terra.BoolValue {
	return terra.ReferenceAsBool(ca.ref.Append("mobile_number_verification_required"))
}

// PasswordPolicyRef returns a reference to field password_policy_ref of cidaas_app.
func (ca cidaasAppAttributes) PasswordPolicyRef() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("password_policy_ref"))
}

// PendingScopes returns a reference to field pending_scopes of cidaas_app.
func (ca cidaasAppAttributes) PendingScopes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ca.ref.Append("pending_scopes"))
}

// PolicyUri returns a reference to field policy_uri of cidaas_app.
func (ca cidaasAppAttributes) PolicyUri() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("policy_uri"))
}

// PostLogoutRedirectUris returns a reference to field post_logout_redirect_uris of cidaas_app.
func (ca cidaasAppAttributes) PostLogoutRedirectUris() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ca.ref.Append("post_logout_redirect_uris"))
}

// PrimaryColor returns a reference to field primary_color of cidaas_app.
func (ca cidaasAppAttributes) PrimaryColor() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("primary_color"))
}

// RedirectUris returns a reference to field redirect_uris of cidaas_app.
func (ca cidaasAppAttributes) RedirectUris() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ca.ref.Append("redirect_uris"))
}

// RefreshTokenLifetimeInSeconds returns a reference to field refresh_token_lifetime_in_seconds of cidaas_app.
func (ca cidaasAppAttributes) RefreshTokenLifetimeInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(ca.ref.Append("refresh_token_lifetime_in_seconds"))
}

// RegisterWithLoginInformation returns a reference to field register_with_login_information of cidaas_app.
func (ca cidaasAppAttributes) RegisterWithLoginInformation() terra.BoolValue {
	return terra.ReferenceAsBool(ca.ref.Append("register_with_login_information"))
}

// RegistrationAccessToken returns a reference to field registration_access_token of cidaas_app.
func (ca cidaasAppAttributes) RegistrationAccessToken() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("registration_access_token"))
}

// RegistrationClientUri returns a reference to field registration_client_uri of cidaas_app.
func (ca cidaasAppAttributes) RegistrationClientUri() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("registration_client_uri"))
}

// RequestObjectEncryptionAlg returns a reference to field request_object_encryption_alg of cidaas_app.
func (ca cidaasAppAttributes) RequestObjectEncryptionAlg() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("request_object_encryption_alg"))
}

// RequestObjectEncryptionEnc returns a reference to field request_object_encryption_enc of cidaas_app.
func (ca cidaasAppAttributes) RequestObjectEncryptionEnc() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("request_object_encryption_enc"))
}

// RequestObjectSigningAlg returns a reference to field request_object_signing_alg of cidaas_app.
func (ca cidaasAppAttributes) RequestObjectSigningAlg() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("request_object_signing_alg"))
}

// RequestUris returns a reference to field request_uris of cidaas_app.
func (ca cidaasAppAttributes) RequestUris() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ca.ref.Append("request_uris"))
}

// RequiredFields returns a reference to field required_fields of cidaas_app.
func (ca cidaasAppAttributes) RequiredFields() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ca.ref.Append("required_fields"))
}

// ResponseTypes returns a reference to field response_types of cidaas_app.
func (ca cidaasAppAttributes) ResponseTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ca.ref.Append("response_types"))
}

// Role returns a reference to field role of cidaas_app.
func (ca cidaasAppAttributes) Role() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("role"))
}

// SectorIdentifierUri returns a reference to field sector_identifier_uri of cidaas_app.
func (ca cidaasAppAttributes) SectorIdentifierUri() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("sector_identifier_uri"))
}

// SmartMfa returns a reference to field smart_mfa of cidaas_app.
func (ca cidaasAppAttributes) SmartMfa() terra.BoolValue {
	return terra.ReferenceAsBool(ca.ref.Append("smart_mfa"))
}

// Sub returns a reference to field sub of cidaas_app.
func (ca cidaasAppAttributes) Sub() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("sub"))
}

// SubjectType returns a reference to field subject_type of cidaas_app.
func (ca cidaasAppAttributes) SubjectType() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("subject_type"))
}

// SuggestMfa returns a reference to field suggest_mfa of cidaas_app.
func (ca cidaasAppAttributes) SuggestMfa() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ca.ref.Append("suggest_mfa"))
}

// TemplateGroupId returns a reference to field template_group_id of cidaas_app.
func (ca cidaasAppAttributes) TemplateGroupId() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("template_group_id"))
}

// TokenEndpointAuthMethod returns a reference to field token_endpoint_auth_method of cidaas_app.
func (ca cidaasAppAttributes) TokenEndpointAuthMethod() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("token_endpoint_auth_method"))
}

// TokenEndpointAuthSigningAlg returns a reference to field token_endpoint_auth_signing_alg of cidaas_app.
func (ca cidaasAppAttributes) TokenEndpointAuthSigningAlg() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("token_endpoint_auth_signing_alg"))
}

// TokenLifetimeInSeconds returns a reference to field token_lifetime_in_seconds of cidaas_app.
func (ca cidaasAppAttributes) TokenLifetimeInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(ca.ref.Append("token_lifetime_in_seconds"))
}

// TosUri returns a reference to field tos_uri of cidaas_app.
func (ca cidaasAppAttributes) TosUri() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("tos_uri"))
}

// UserConsent returns a reference to field user_consent of cidaas_app.
func (ca cidaasAppAttributes) UserConsent() terra.BoolValue {
	return terra.ReferenceAsBool(ca.ref.Append("user_consent"))
}

// UserinfoEncryptedResponseAlg returns a reference to field userinfo_encrypted_response_alg of cidaas_app.
func (ca cidaasAppAttributes) UserinfoEncryptedResponseAlg() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("userinfo_encrypted_response_alg"))
}

// UserinfoEncryptedResponseEnc returns a reference to field userinfo_encrypted_response_enc of cidaas_app.
func (ca cidaasAppAttributes) UserinfoEncryptedResponseEnc() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("userinfo_encrypted_response_enc"))
}

// UserinfoSignedResponseAlg returns a reference to field userinfo_signed_response_alg of cidaas_app.
func (ca cidaasAppAttributes) UserinfoSignedResponseAlg() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("userinfo_signed_response_alg"))
}

// ValidatePhoneNumber returns a reference to field validate_phone_number of cidaas_app.
func (ca cidaasAppAttributes) ValidatePhoneNumber() terra.BoolValue {
	return terra.ReferenceAsBool(ca.ref.Append("validate_phone_number"))
}

// VideoUrl returns a reference to field video_url of cidaas_app.
func (ca cidaasAppAttributes) VideoUrl() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("video_url"))
}

// WebMessageUris returns a reference to field web_message_uris of cidaas_app.
func (ca cidaasAppAttributes) WebMessageUris() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ca.ref.Append("web_message_uris"))
}

// Webfinger returns a reference to field webfinger of cidaas_app.
func (ca cidaasAppAttributes) Webfinger() terra.StringValue {
	return terra.ReferenceAsString(ca.ref.Append("webfinger"))
}

func (ca cidaasAppAttributes) AdProviders() terra.ListValue[adProvidersAttributes] {
	return terra.ReferenceAsList[adProvidersAttributes](ca.ref.Append("ad_providers"))
}

func (ca cidaasAppAttributes) AllowGuestLoginGroups() terra.ListValue[allowGuestLoginGroupsAttributes] {
	return terra.ReferenceAsList[allowGuestLoginGroupsAttributes](ca.ref.Append("allow_guest_login_groups"))
}

func (ca cidaasAppAttributes) AllowedGroups() terra.ListValue[allowedGroupsAttributes] {
	return terra.ReferenceAsList[allowedGroupsAttributes](ca.ref.Append("allowed_groups"))
}

func (ca cidaasAppAttributes) CommonConfigs() commonConfigsAttributes {
	return terra.ReferenceAsSingle[commonConfigsAttributes](ca.ref.Append("common_configs"))
}

func (ca cidaasAppAttributes) CustomProviders() terra.ListValue[customProvidersAttributes] {
	return terra.ReferenceAsList[customProvidersAttributes](ca.ref.Append("custom_providers"))
}

func (ca cidaasAppAttributes) GroupSelection() groupSelectionAttributes {
	return terra.ReferenceAsSingle[groupSelectionAttributes](ca.ref.Append("group_selection"))
}

func (ca cidaasAppAttributes) LoginSpi() loginSpiAttributes {
	return terra.ReferenceAsSingle[loginSpiAttributes](ca.ref.Append("login_spi"))
}

func (ca cidaasAppAttributes) Mfa() mfaAttributes {
	return terra.ReferenceAsSingle[mfaAttributes](ca.ref.Append("mfa"))
}

func (ca cidaasAppAttributes) MobileSettings() mobileSettingsAttributes {
	return terra.ReferenceAsSingle[mobileSettingsAttributes](ca.ref.Append("mobile_settings"))
}

func (ca cidaasAppAttributes) OperationsAllowedGroups() terra.ListValue[operationsAllowedGroupsAttributes] {
	return terra.ReferenceAsList[operationsAllowedGroupsAttributes](ca.ref.Append("operations_allowed_groups"))
}

func (ca cidaasAppAttributes) SamlProviders() terra.ListValue[samlProvidersAttributes] {
	return terra.ReferenceAsList[samlProvidersAttributes](ca.ref.Append("saml_providers"))
}

func (ca cidaasAppAttributes) SocialProviders() terra.ListValue[socialProvidersAttributes] {
	return terra.ReferenceAsList[socialProvidersAttributes](ca.ref.Append("social_providers"))
}

type cidaasAppState struct {
	AccentColor                      string                         `json:"accent_color"`
	AdditionalAccessTokenPayload     []string                       `json:"additional_access_token_payload"`
	AllowDisposableEmail             bool                           `json:"allow_disposable_email"`
	AllowGuestLogin                  bool                           `json:"allow_guest_login"`
	AllowLoginWith                   []string                       `json:"allow_login_with"`
	AllowedFields                    []string                       `json:"allowed_fields"`
	AllowedLogoutUrls                []string                       `json:"allowed_logout_urls"`
	AllowedMfa                       []string                       `json:"allowed_mfa"`
	AllowedOrigins                   []string                       `json:"allowed_origins"`
	AllowedRoles                     []string                       `json:"allowed_roles"`
	AllowedScopes                    []string                       `json:"allowed_scopes"`
	AllowedWebOrigins                []string                       `json:"allowed_web_origins"`
	AlwaysAskMfa                     bool                           `json:"always_ask_mfa"`
	ApplicationMetaData              map[string]string              `json:"application_meta_data"`
	AutoLoginAfterRegister           bool                           `json:"auto_login_after_register"`
	BackchannelLogoutUri             string                         `json:"backchannel_logout_uri"`
	BackgroundUri                    string                         `json:"background_uri"`
	BlockingMechanismRef             string                         `json:"blocking_mechanism_ref"`
	BotCaptchaRef                    string                         `json:"bot_captcha_ref"`
	BotProvider                      string                         `json:"bot_provider"`
	CaptchaRef                       string                         `json:"captcha_ref"`
	CaptchaRefs                      []string                       `json:"captcha_refs"`
	ClientDisplayName                string                         `json:"client_display_name"`
	ClientId                         string                         `json:"client_id"`
	ClientName                       string                         `json:"client_name"`
	ClientSecret                     string                         `json:"client_secret"`
	ClientType                       string                         `json:"client_type"`
	ClientUri                        string                         `json:"client_uri"`
	CommunicationMediumVerification  string                         `json:"communication_medium_verification"`
	CompanyAddress                   string                         `json:"company_address"`
	CompanyName                      string                         `json:"company_name"`
	CompanyWebsite                   string                         `json:"company_website"`
	ConsentPageGroup                 string                         `json:"consent_page_group"`
	ConsentRefs                      []string                       `json:"consent_refs"`
	Contacts                         []string                       `json:"contacts"`
	ContentAlign                     string                         `json:"content_align"`
	DefaultAcrValues                 []string                       `json:"default_acr_values"`
	DefaultMaxAge                    float64                        `json:"default_max_age"`
	DefaultRoles                     []string                       `json:"default_roles"`
	DefaultScopes                    []string                       `json:"default_scopes"`
	Description                      string                         `json:"description"`
	Editable                         bool                           `json:"editable"`
	EmailVerificationRequired        bool                           `json:"email_verification_required"`
	EnableBotDetection               bool                           `json:"enable_bot_detection"`
	EnableClassicalProvider          bool                           `json:"enable_classical_provider"`
	EnableDeduplication              bool                           `json:"enable_deduplication"`
	EnablePasswordlessAuth           bool                           `json:"enable_passwordless_auth"`
	Enabled                          bool                           `json:"enabled"`
	FdsEnabled                       bool                           `json:"fds_enabled"`
	GrantTypes                       []string                       `json:"grant_types"`
	GroupIds                         []string                       `json:"group_ids"`
	GroupTypes                       []string                       `json:"group_types"`
	HostedPageGroup                  string                         `json:"hosted_page_group"`
	Id                               string                         `json:"id"`
	IdTokenEncryptedResponseAlg      string                         `json:"id_token_encrypted_response_alg"`
	IdTokenEncryptedResponseEnc      string                         `json:"id_token_encrypted_response_enc"`
	IdTokenLifetimeInSeconds         float64                        `json:"id_token_lifetime_in_seconds"`
	IdTokenSignedResponseAlg         string                         `json:"id_token_signed_response_alg"`
	ImprintUri                       string                         `json:"imprint_uri"`
	InitiateLoginUri                 string                         `json:"initiate_login_uri"`
	IsGroupLoginSelectionEnabled     bool                           `json:"is_group_login_selection_enabled"`
	IsHybridApp                      bool                           `json:"is_hybrid_app"`
	IsLoginSuccessPageEnabled        bool                           `json:"is_login_success_page_enabled"`
	IsRegisterSuccessPageEnabled     bool                           `json:"is_register_success_page_enabled"`
	IsRememberMeSelected             bool                           `json:"is_remember_me_selected"`
	JweEnabled                       bool                           `json:"jwe_enabled"`
	Jwks                             string                         `json:"jwks"`
	JwksUri                          string                         `json:"jwks_uri"`
	LoginProviders                   []string                       `json:"login_providers"`
	LogoAlign                        string                         `json:"logo_align"`
	LogoUri                          string                         `json:"logo_uri"`
	MediaType                        string                         `json:"media_type"`
	MfaConfiguration                 string                         `json:"mfa_configuration"`
	MobileNumberVerificationRequired bool                           `json:"mobile_number_verification_required"`
	PasswordPolicyRef                string                         `json:"password_policy_ref"`
	PendingScopes                    []string                       `json:"pending_scopes"`
	PolicyUri                        string                         `json:"policy_uri"`
	PostLogoutRedirectUris           []string                       `json:"post_logout_redirect_uris"`
	PrimaryColor                     string                         `json:"primary_color"`
	RedirectUris                     []string                       `json:"redirect_uris"`
	RefreshTokenLifetimeInSeconds    float64                        `json:"refresh_token_lifetime_in_seconds"`
	RegisterWithLoginInformation     bool                           `json:"register_with_login_information"`
	RegistrationAccessToken          string                         `json:"registration_access_token"`
	RegistrationClientUri            string                         `json:"registration_client_uri"`
	RequestObjectEncryptionAlg       string                         `json:"request_object_encryption_alg"`
	RequestObjectEncryptionEnc       string                         `json:"request_object_encryption_enc"`
	RequestObjectSigningAlg          string                         `json:"request_object_signing_alg"`
	RequestUris                      []string                       `json:"request_uris"`
	RequiredFields                   []string                       `json:"required_fields"`
	ResponseTypes                    []string                       `json:"response_types"`
	Role                             string                         `json:"role"`
	SectorIdentifierUri              string                         `json:"sector_identifier_uri"`
	SmartMfa                         bool                           `json:"smart_mfa"`
	Sub                              string                         `json:"sub"`
	SubjectType                      string                         `json:"subject_type"`
	SuggestMfa                       []string                       `json:"suggest_mfa"`
	TemplateGroupId                  string                         `json:"template_group_id"`
	TokenEndpointAuthMethod          string                         `json:"token_endpoint_auth_method"`
	TokenEndpointAuthSigningAlg      string                         `json:"token_endpoint_auth_signing_alg"`
	TokenLifetimeInSeconds           float64                        `json:"token_lifetime_in_seconds"`
	TosUri                           string                         `json:"tos_uri"`
	UserConsent                      bool                           `json:"user_consent"`
	UserinfoEncryptedResponseAlg     string                         `json:"userinfo_encrypted_response_alg"`
	UserinfoEncryptedResponseEnc     string                         `json:"userinfo_encrypted_response_enc"`
	UserinfoSignedResponseAlg        string                         `json:"userinfo_signed_response_alg"`
	ValidatePhoneNumber              bool                           `json:"validate_phone_number"`
	VideoUrl                         string                         `json:"video_url"`
	WebMessageUris                   []string                       `json:"web_message_uris"`
	Webfinger                        string                         `json:"webfinger"`
	AdProviders                      []AdProvidersState             `json:"ad_providers"`
	AllowGuestLoginGroups            []AllowGuestLoginGroupsState   `json:"allow_guest_login_groups"`
	AllowedGroups                    []AllowedGroupsState           `json:"allowed_groups"`
	CommonConfigs                    *CommonConfigsState            `json:"common_configs"`
	CustomProviders                  []CustomProvidersState         `json:"custom_providers"`
	GroupSelection                   *GroupSelectionState           `json:"group_selection"`
	LoginSpi                         *LoginSpiState                 `json:"login_spi"`
	Mfa                              *MfaState                      `json:"mfa"`
	MobileSettings                   *MobileSettingsState           `json:"mobile_settings"`
	OperationsAllowedGroups          []OperationsAllowedGroupsState `json:"operations_allowed_groups"`
	SamlProviders                    []SamlProvidersState           `json:"saml_providers"`
	SocialProviders                  []SocialProvidersState         `json:"social_providers"`
}
-- out/cidaas_app/cidaas_app_types.go --
// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package cidaas_app

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type AdProviders struct {
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Domains: set of string, optional
	Domains terra.SetValue[terra.StringValue] `hcl:"domains,attr"`
	// IsProviderVisible: bool, optional
	IsProviderVisible terra.BoolValue `hcl:"is_provider_visible,attr"`
	// LogoUrl: string, optional
	LogoUrl terra.StringValue `hcl:"logo_url,attr"`
	// ProviderName: string, optional
	ProviderName terra.StringValue `hcl:"provider_name,attr"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
}

type AllowGuestLoginGroups struct {
	// DefaultRoles: set of string, optional
	DefaultRoles terra.SetValue[terra.StringValue] `hcl:"default_roles,attr"`
	// GroupId: string, optional
	GroupId terra.StringValue `hcl:"group_id,attr"`
	// Roles: set of string, optional
	Roles terra.SetValue[terra.StringValue] `hcl:"roles,attr"`
}

type AllowedGroups struct {
	// DefaultRoles: set of string, optional
	DefaultRoles terra.SetValue[terra.StringValue] `hcl:"default_roles,attr"`
	// GroupId: string, optional
	GroupId terra.StringValue `hcl:"group_id,attr"`
	// Roles: set of string, optional
	Roles terra.SetValue[terra.StringValue] `hcl:"roles,attr"`
}

type CommonConfigs struct {
	// AccentColor: string, optional
	AccentColor terra.StringValue `hcl:"accent_color,attr"`
	// AllowGuestLogin: bool, optional
	AllowGuestLogin terra.BoolValue `hcl:"allow_guest_login,attr"`
	// AllowLoginWith: set of string, optional
	AllowLoginWith terra.SetValue[terra.StringValue] `hcl:"allow_login_with,attr"`
	// AllowedLogoutUrls: set of string, optional
	AllowedLogoutUrls terra.SetValue[terra.StringValue] `hcl:"allowed_logout_urls,attr"`
	// AllowedMfa: set of string, optional
	AllowedMfa terra.SetValue[terra.StringValue] `hcl:"allowed_mfa,attr"`
	// AllowedOrigins: set of string, optional
	AllowedOrigins terra.SetValue[terra.StringValue] `hcl:"allowed_origins,attr"`
	// AllowedRoles: set of string, optional
	AllowedRoles terra.SetValue[terra.StringValue] `hcl:"allowed_roles,attr"`
	// AllowedScopes: set of string, optional
	AllowedScopes terra.SetValue[terra.StringValue] `hcl:"allowed_scopes,attr"`
	// AllowedWebOrigins: set of string, optional
	AllowedWebOrigins terra.SetValue[terra.StringValue] `hcl:"allowed_web_origins,attr"`
	// AlwaysAskMfa: bool, optional
	AlwaysAskMfa terra.BoolValue `hcl:"always_ask_mfa,attr"`
	// AutoLoginAfterRegister: bool, optional
	AutoLoginAfterRegister terra.BoolValue `hcl:"auto_login_after_register,attr"`
	// BotProvider: string, optional
	BotProvider terra.StringValue `hcl:"bot_provider,attr"`
	// ClientType: string, optional
	ClientType terra.StringValue `hcl:"client_type,attr"`
	// CompanyAddress: string, optional
	CompanyAddress terra.StringValue `hcl:"company_address,attr"`
	// CompanyName: string, optional
	CompanyName terra.StringValue `hcl:"company_name,attr"`
	// CompanyWebsite: string, optional
	CompanyWebsite terra.StringValue `hcl:"company_website,attr"`
	// DefaultMaxAge: number, optional
	DefaultMaxAge terra.NumberValue `hcl:"default_max_age,attr"`
	// DefaultRoles: set of string, optional
	DefaultRoles terra.SetValue[terra.StringValue] `hcl:"default_roles,attr"`
	// DefaultScopes: set of string, optional
	DefaultScopes terra.SetValue[terra.StringValue] `hcl:"default_scopes,attr"`
	// Editable: bool, optional
	Editable terra.BoolValue `hcl:"editable,attr"`
	// EmailVerificationRequired: bool, optional
	EmailVerificationRequired terra.BoolValue `hcl:"email_verification_required,attr"`
	// EnableClassicalProvider: bool, optional
	EnableClassicalProvider terra.BoolValue `hcl:"enable_classical_provider,attr"`
	// EnableDeduplication: bool, optional
	EnableDeduplication terra.BoolValue `hcl:"enable_deduplication,attr"`
	// EnablePasswordlessAuth: bool, optional
	EnablePasswordlessAuth terra.BoolValue `hcl:"enable_passwordless_auth,attr"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// FdsEnabled: bool, optional
	FdsEnabled terra.BoolValue `hcl:"fds_enabled,attr"`
	// GrantTypes: set of string, optional
	GrantTypes terra.SetValue[terra.StringValue] `hcl:"grant_types,attr"`
	// HostedPageGroup: string, optional
	HostedPageGroup terra.StringValue `hcl:"hosted_page_group,attr"`
	// IdTokenLifetimeInSeconds: number, optional
	IdTokenLifetimeInSeconds terra.NumberValue `hcl:"id_token_lifetime_in_seconds,attr"`
	// IsHybridApp: bool, optional
	IsHybridApp terra.BoolValue `hcl:"is_hybrid_app,attr"`
	// IsRememberMeSelected: bool, optional
	IsRememberMeSelected terra.BoolValue `hcl:"is_remember_me_selected,attr"`
	// LoginProviders: set of string, optional
	LoginProviders terra.SetValue[terra.StringValue] `hcl:"login_providers,attr"`
	// LogoAlign: string, optional
	LogoAlign terra.StringValue `hcl:"logo_align,attr"`
	// MediaType: string, optional
	MediaType terra.StringValue `hcl:"media_type,attr"`
	// PendingScopes: set of string, optional
	PendingScopes terra.SetValue[terra.StringValue] `hcl:"pending_scopes,attr"`
	// PrimaryColor: string, optional
	PrimaryColor terra.StringValue `hcl:"primary_color,attr"`
	// RedirectUris: set of string, optional
	RedirectUris terra.SetValue[terra.StringValue] `hcl:"redirect_uris,attr"`
	// RefreshTokenLifetimeInSeconds: number, optional
	RefreshTokenLifetimeInSeconds terra.NumberValue `hcl:"refresh_token_lifetime_in_seconds,attr"`
	// RegisterWithLoginInformation: bool, optional
	RegisterWithLoginInformation terra.BoolValue `hcl:"register_with_login_information,attr"`
	// ResponseTypes: set of string, optional
	ResponseTypes terra.SetValue[terra.StringValue] `hcl:"response_types,attr"`
	// TemplateGroupId: string, optional
	TemplateGroupId terra.StringValue `hcl:"template_group_id,attr"`
	// TokenLifetimeInSeconds: number, optional
	TokenLifetimeInSeconds terra.NumberValue `hcl:"token_lifetime_in_seconds,attr"`
	// Webfinger: string, optional
	Webfinger terra.StringValue `hcl:"webfinger,attr"`
	// CommonConfigsAdProviders: min=0
	AdProviders []CommonConfigsAdProviders `hcl:"ad_providers,attr" validate:"min=0"`
	// CommonConfigsAllowedGroups: min=0
	AllowedGroups []CommonConfigsAllowedGroups `hcl:"allowed_groups,attr" validate:"min=0"`
	// CommonConfigsCustomProviders: min=0
	CustomProviders []CommonConfigsCustomProviders `hcl:"custom_providers,attr" validate:"min=0"`
	// CommonConfigsMfa: optional
	Mfa *CommonConfigsMfa `hcl:"mfa,attr"`
	// CommonConfigsOperationsAllowedGroups: min=0
	OperationsAllowedGroups []CommonConfigsOperationsAllowedGroups `hcl:"operations_allowed_groups,attr" validate:"min=0"`
	// CommonConfigsSamlProviders: min=0
	SamlProviders []CommonConfigsSamlProviders `hcl:"saml_providers,attr" validate:"min=0"`
	// CommonConfigsSocialProviders: min=0
	SocialProviders []CommonConfigsSocialProviders `hcl:"social_providers,attr" validate:"min=0"`
}

type CommonConfigsAdProviders struct {
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Domains: set of string, optional
	Domains terra.SetValue[terra.StringValue] `hcl:"domains,attr"`
	// IsProviderVisible: bool, optional
	IsProviderVisible terra.BoolValue `hcl:"is_provider_visible,attr"`
	// LogoUrl: string, optional
	LogoUrl terra.StringValue `hcl:"logo_url,attr"`
	// ProviderName: string, optional
	ProviderName terra.StringValue `hcl:"provider_name,attr"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
}

type CommonConfigsAllowedGroups struct {
	// DefaultRoles: set of string, optional
	DefaultRoles terra.SetValue[terra.StringValue] `hcl:"default_roles,attr"`
	// GroupId: string, optional
	GroupId terra.StringValue `hcl:"group_id,attr"`
	// Roles: set of string, optional
	Roles terra.SetValue[terra.StringValue] `hcl:"roles,attr"`
}

type CommonConfigsCustomProviders struct {
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Domains: set of string, optional
	Domains terra.SetValue[terra.StringValue] `hcl:"domains,attr"`
	// IsProviderVisible: bool, optional
	IsProviderVisible terra.BoolValue `hcl:"is_provider_visible,attr"`
	// LogoUrl: string, optional
	LogoUrl terra.StringValue `hcl:"logo_url,attr"`
	// ProviderName: string, optional
	ProviderName terra.StringValue `hcl:"provider_name,attr"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
}

type CommonConfigsMfa struct {
	// AllowedMethods: set of string, optional
	AllowedMethods terra.SetValue[terra.StringValue] `hcl:"allowed_methods,attr"`
	// Setting: string, optional
	Setting terra.StringValue `hcl:"setting,attr"`
	// TimeIntervalInSeconds: number, optional
	TimeIntervalInSeconds terra.NumberValue `hcl:"time_interval_in_seconds,attr"`
}

type CommonConfigsOperationsAllowedGroups struct {
	// DefaultRoles: set of string, optional
	DefaultRoles terra.SetValue[terra.StringValue] `hcl:"default_roles,attr"`
	// GroupId: string, optional
	GroupId terra.StringValue `hcl:"group_id,attr"`
	// Roles: set of string, optional
	Roles terra.SetValue[terra.StringValue] `hcl:"roles,attr"`
}

type CommonConfigsSamlProviders struct {
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Domains: set of string, optional
	Domains terra.SetValue[terra.StringValue] `hcl:"domains,attr"`
	// IsProviderVisible: bool, optional
	IsProviderVisible terra.BoolValue `hcl:"is_provider_visible,attr"`
	// LogoUrl: string, optional
	LogoUrl terra.StringValue `hcl:"logo_url,attr"`
	// ProviderName: string, optional
	ProviderName terra.StringValue `hcl:"provider_name,attr"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
}

type CommonConfigsSocialProviders struct {
	// ProviderName: string, optional
	ProviderName terra.StringValue `hcl:"provider_name,attr"`
	// SocialId: string, optional
	SocialId terra.StringValue `hcl:"social_id,attr"`
}

type CustomProviders struct {
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Domains: set of string, optional
	Domains terra.SetValue[terra.StringValue] `hcl:"domains,attr"`
	// IsProviderVisible: bool, optional
	IsProviderVisible terra.BoolValue `hcl:"is_provider_visible,attr"`
	// LogoUrl: string, optional
	LogoUrl terra.StringValue `hcl:"logo_url,attr"`
	// ProviderName: string, optional
	ProviderName terra.StringValue `hcl:"provider_name,attr"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
}

type GroupSelection struct {
	// AlwaysShowGroupSelection: bool, optional
	AlwaysShowGroupSelection terra.BoolValue `hcl:"always_show_group_selection,attr"`
	// SelectableGroupTypes: set of string, optional
	SelectableGroupTypes terra.SetValue[terra.StringValue] `hcl:"selectable_group_types,attr"`
	// SelectableGroups: set of string, optional
	SelectableGroups terra.SetValue[terra.StringValue] `hcl:"selectable_groups,attr"`
}

type LoginSpi struct {
	// OauthClientId: string, optional
	OauthClientId terra.StringValue `hcl:"oauth_client_id,attr"`
	// SpiUrl: string, optional
	SpiUrl terra.StringValue `hcl:"spi_url,attr"`
}

type Mfa struct {
	// AllowedMethods: set of string, optional
	AllowedMethods terra.SetValue[terra.StringValue] `hcl:"allowed_methods,attr"`
	// Setting: string, optional
	Setting terra.StringValue `hcl:"setting,attr"`
	// TimeIntervalInSeconds: number, optional
	TimeIntervalInSeconds terra.NumberValue `hcl:"time_interval_in_seconds,attr"`
}

type MobileSettings struct {
	// BundleId: string, optional
	BundleId terra.StringValue `hcl:"bundle_id,attr"`
	// KeyHash: string, optional
	KeyHash terra.StringValue `hcl:"key_hash,attr"`
	// PackageName: string, optional
	PackageName terra.StringValue `hcl:"package_name,attr"`
	// TeamId: string, optional
	TeamId terra.StringValue `hcl:"team_id,attr"`
}

type OperationsAllowedGroups struct {
	// DefaultRoles: set of string, optional
	DefaultRoles terra.SetValue[terra.StringValue] `hcl:"default_roles,attr"`
	// GroupId: string, optional
	GroupId terra.StringValue `hcl:"group_id,attr"`
	// Roles: set of string, optional
	Roles terra.SetValue[terra.StringValue] `hcl:"roles,attr"`
}

type SamlProviders struct {
	// DisplayName: string, optional
	DisplayName terra.StringValue `hcl:"display_name,attr"`
	// Domains: set of string, optional
	Domains terra.SetValue[terra.StringValue] `hcl:"domains,attr"`
	// IsProviderVisible: bool, optional
	IsProviderVisible terra.BoolValue `hcl:"is_provider_visible,attr"`
	// LogoUrl: string, optional
	LogoUrl terra.StringValue `hcl:"logo_url,attr"`
	// ProviderName: string, optional
	ProviderName terra.StringValue `hcl:"provider_name,attr"`
	// Type: string, optional
	Type terra.StringValue `hcl:"type,attr"`
}

type SocialProviders struct {
	// ProviderName: string, optional
	ProviderName terra.StringValue `hcl:"provider_name,attr"`
	// SocialId: string, optional
	SocialId terra.StringValue `hcl:"social_id,attr"`
}

type adProvidersAttributes struct {
	ref terra.Reference
}

func (ap adProvidersAttributes) InternalRef() (terra.Reference, error) {
	return ap.ref, nil
}

func (ap adProvidersAttributes) InternalWithRef(ref terra.Reference) adProvidersAttributes {
	return adProvidersAttributes{ref: ref}
}

func (ap adProvidersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ap.ref.InternalTokens()
}

func (ap adProvidersAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(ap.ref.Append("display_name"))
}

func (ap adProvidersAttributes) Domains() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ap.ref.Append("domains"))
}

func (ap adProvidersAttributes) IsProviderVisible() terra.BoolValue {
	return terra.ReferenceAsBool(ap.ref.Append("is_provider_visible"))
}

func (ap adProvidersAttributes) LogoUrl() terra.StringValue {
	return terra.ReferenceAsString(ap.ref.Append("logo_url"))
}

func (ap adProvidersAttributes) ProviderName() terra.StringValue {
	return terra.ReferenceAsString(ap.ref.Append("provider_name"))
}

func (ap adProvidersAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ap.ref.Append("type"))
}

type allowGuestLoginGroupsAttributes struct {
	ref terra.Reference
}

func (aglg allowGuestLoginGroupsAttributes) InternalRef() (terra.Reference, error) {
	return aglg.ref, nil
}

func (aglg allowGuestLoginGroupsAttributes) InternalWithRef(ref terra.Reference) allowGuestLoginGroupsAttributes {
	return allowGuestLoginGroupsAttributes{ref: ref}
}

func (aglg allowGuestLoginGroupsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return aglg.ref.InternalTokens()
}

func (aglg allowGuestLoginGroupsAttributes) DefaultRoles() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aglg.ref.Append("default_roles"))
}

func (aglg allowGuestLoginGroupsAttributes) GroupId() terra.StringValue {
	return terra.ReferenceAsString(aglg.ref.Append("group_id"))
}

func (aglg allowGuestLoginGroupsAttributes) Roles() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](aglg.ref.Append("roles"))
}

type allowedGroupsAttributes struct {
	ref terra.Reference
}

func (ag allowedGroupsAttributes) InternalRef() (terra.Reference, error) {
	return ag.ref, nil
}

func (ag allowedGroupsAttributes) InternalWithRef(ref terra.Reference) allowedGroupsAttributes {
	return allowedGroupsAttributes{ref: ref}
}

func (ag allowedGroupsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ag.ref.InternalTokens()
}

func (ag allowedGroupsAttributes) DefaultRoles() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ag.ref.Append("default_roles"))
}

func (ag allowedGroupsAttributes) GroupId() terra.StringValue {
	return terra.ReferenceAsString(ag.ref.Append("group_id"))
}

func (ag allowedGroupsAttributes) Roles() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ag.ref.Append("roles"))
}

type commonConfigsAttributes struct {
	ref terra.Reference
}

func (cc commonConfigsAttributes) InternalRef() (terra.Reference, error) {
	return cc.ref, nil
}

func (cc commonConfigsAttributes) InternalWithRef(ref terra.Reference) commonConfigsAttributes {
	return commonConfigsAttributes{ref: ref}
}

func (cc commonConfigsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cc.ref.InternalTokens()
}

func (cc commonConfigsAttributes) AccentColor() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("accent_color"))
}

func (cc commonConfigsAttributes) AllowGuestLogin() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("allow_guest_login"))
}

func (cc commonConfigsAttributes) AllowLoginWith() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cc.ref.Append("allow_login_with"))
}

func (cc commonConfigsAttributes) AllowedLogoutUrls() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cc.ref.Append("allowed_logout_urls"))
}

func (cc commonConfigsAttributes) AllowedMfa() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cc.ref.Append("allowed_mfa"))
}

func (cc commonConfigsAttributes) AllowedOrigins() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cc.ref.Append("allowed_origins"))
}

func (cc commonConfigsAttributes) AllowedRoles() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cc.ref.Append("allowed_roles"))
}

func (cc commonConfigsAttributes) AllowedScopes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cc.ref.Append("allowed_scopes"))
}

func (cc commonConfigsAttributes) AllowedWebOrigins() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cc.ref.Append("allowed_web_origins"))
}

func (cc commonConfigsAttributes) AlwaysAskMfa() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("always_ask_mfa"))
}

func (cc commonConfigsAttributes) AutoLoginAfterRegister() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("auto_login_after_register"))
}

func (cc commonConfigsAttributes) BotProvider() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("bot_provider"))
}

func (cc commonConfigsAttributes) ClientType() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("client_type"))
}

func (cc commonConfigsAttributes) CompanyAddress() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("company_address"))
}

func (cc commonConfigsAttributes) CompanyName() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("company_name"))
}

func (cc commonConfigsAttributes) CompanyWebsite() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("company_website"))
}

func (cc commonConfigsAttributes) DefaultMaxAge() terra.NumberValue {
	return terra.ReferenceAsNumber(cc.ref.Append("default_max_age"))
}

func (cc commonConfigsAttributes) DefaultRoles() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cc.ref.Append("default_roles"))
}

func (cc commonConfigsAttributes) DefaultScopes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cc.ref.Append("default_scopes"))
}

func (cc commonConfigsAttributes) Editable() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("editable"))
}

func (cc commonConfigsAttributes) EmailVerificationRequired() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("email_verification_required"))
}

func (cc commonConfigsAttributes) EnableClassicalProvider() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("enable_classical_provider"))
}

func (cc commonConfigsAttributes) EnableDeduplication() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("enable_deduplication"))
}

func (cc commonConfigsAttributes) EnablePasswordlessAuth() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("enable_passwordless_auth"))
}

func (cc commonConfigsAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("enabled"))
}

func (cc commonConfigsAttributes) FdsEnabled() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("fds_enabled"))
}

func (cc commonConfigsAttributes) GrantTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cc.ref.Append("grant_types"))
}

func (cc commonConfigsAttributes) HostedPageGroup() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("hosted_page_group"))
}

func (cc commonConfigsAttributes) IdTokenLifetimeInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(cc.ref.Append("id_token_lifetime_in_seconds"))
}

func (cc commonConfigsAttributes) IsHybridApp() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("is_hybrid_app"))
}

func (cc commonConfigsAttributes) IsRememberMeSelected() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("is_remember_me_selected"))
}

func (cc commonConfigsAttributes) LoginProviders() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cc.ref.Append("login_providers"))
}

func (cc commonConfigsAttributes) LogoAlign() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("logo_align"))
}

func (cc commonConfigsAttributes) MediaType() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("media_type"))
}

func (cc commonConfigsAttributes) PendingScopes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cc.ref.Append("pending_scopes"))
}

func (cc commonConfigsAttributes) PrimaryColor() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("primary_color"))
}

func (cc commonConfigsAttributes) RedirectUris() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cc.ref.Append("redirect_uris"))
}

func (cc commonConfigsAttributes) RefreshTokenLifetimeInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(cc.ref.Append("refresh_token_lifetime_in_seconds"))
}

func (cc commonConfigsAttributes) RegisterWithLoginInformation() terra.BoolValue {
	return terra.ReferenceAsBool(cc.ref.Append("register_with_login_information"))
}

func (cc commonConfigsAttributes) ResponseTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cc.ref.Append("response_types"))
}

func (cc commonConfigsAttributes) TemplateGroupId() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("template_group_id"))
}

func (cc commonConfigsAttributes) TokenLifetimeInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(cc.ref.Append("token_lifetime_in_seconds"))
}

func (cc commonConfigsAttributes) Webfinger() terra.StringValue {
	return terra.ReferenceAsString(cc.ref.Append("webfinger"))
}

func (cc commonConfigsAttributes) AdProviders() terra.ListValue[commonConfigsAdProvidersAttributes] {
	return terra.ReferenceAsList[commonConfigsAdProvidersAttributes](cc.ref.Append("ad_providers"))
}

func (cc commonConfigsAttributes) AllowedGroups() terra.ListValue[commonConfigsAllowedGroupsAttributes] {
	return terra.ReferenceAsList[commonConfigsAllowedGroupsAttributes](cc.ref.Append("allowed_groups"))
}

func (cc commonConfigsAttributes) CustomProviders() terra.ListValue[commonConfigsCustomProvidersAttributes] {
	return terra.ReferenceAsList[commonConfigsCustomProvidersAttributes](cc.ref.Append("custom_providers"))
}

func (cc commonConfigsAttributes) Mfa() commonConfigsMfaAttributes {
	return terra.ReferenceAsSingle[commonConfigsMfaAttributes](cc.ref.Append("mfa"))
}

func (cc commonConfigsAttributes) OperationsAllowedGroups() terra.ListValue[commonConfigsOperationsAllowedGroupsAttributes] {
	return terra.ReferenceAsList[commonConfigsOperationsAllowedGroupsAttributes](cc.ref.Append("operations_allowed_groups"))
}

func (cc commonConfigsAttributes) SamlProviders() terra.ListValue[commonConfigsSamlProvidersAttributes] {
	return terra.ReferenceAsList[commonConfigsSamlProvidersAttributes](cc.ref.Append("saml_providers"))
}

func (cc commonConfigsAttributes) SocialProviders() terra.ListValue[commonConfigsSocialProvidersAttributes] {
	return terra.ReferenceAsList[commonConfigsSocialProvidersAttributes](cc.ref.Append("social_providers"))
}

type commonConfigsAdProvidersAttributes struct {
	ref terra.Reference
}

func (ap commonConfigsAdProvidersAttributes) InternalRef() (terra.Reference, error) {
	return ap.ref, nil
}

func (ap commonConfigsAdProvidersAttributes) InternalWithRef(ref terra.Reference) commonConfigsAdProvidersAttributes {
	return commonConfigsAdProvidersAttributes{ref: ref}
}

func (ap commonConfigsAdProvidersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ap.ref.InternalTokens()
}

func (ap commonConfigsAdProvidersAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(ap.ref.Append("display_name"))
}

func (ap commonConfigsAdProvidersAttributes) Domains() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ap.ref.Append("domains"))
}

func (ap commonConfigsAdProvidersAttributes) IsProviderVisible() terra.BoolValue {
	return terra.ReferenceAsBool(ap.ref.Append("is_provider_visible"))
}

func (ap commonConfigsAdProvidersAttributes) LogoUrl() terra.StringValue {
	return terra.ReferenceAsString(ap.ref.Append("logo_url"))
}

func (ap commonConfigsAdProvidersAttributes) ProviderName() terra.StringValue {
	return terra.ReferenceAsString(ap.ref.Append("provider_name"))
}

func (ap commonConfigsAdProvidersAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(ap.ref.Append("type"))
}

type commonConfigsAllowedGroupsAttributes struct {
	ref terra.Reference
}

func (ag commonConfigsAllowedGroupsAttributes) InternalRef() (terra.Reference, error) {
	return ag.ref, nil
}

func (ag commonConfigsAllowedGroupsAttributes) InternalWithRef(ref terra.Reference) commonConfigsAllowedGroupsAttributes {
	return commonConfigsAllowedGroupsAttributes{ref: ref}
}

func (ag commonConfigsAllowedGroupsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ag.ref.InternalTokens()
}

func (ag commonConfigsAllowedGroupsAttributes) DefaultRoles() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ag.ref.Append("default_roles"))
}

func (ag commonConfigsAllowedGroupsAttributes) GroupId() terra.StringValue {
	return terra.ReferenceAsString(ag.ref.Append("group_id"))
}

func (ag commonConfigsAllowedGroupsAttributes) Roles() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ag.ref.Append("roles"))
}

type commonConfigsCustomProvidersAttributes struct {
	ref terra.Reference
}

func (cp commonConfigsCustomProvidersAttributes) InternalRef() (terra.Reference, error) {
	return cp.ref, nil
}

func (cp commonConfigsCustomProvidersAttributes) InternalWithRef(ref terra.Reference) commonConfigsCustomProvidersAttributes {
	return commonConfigsCustomProvidersAttributes{ref: ref}
}

func (cp commonConfigsCustomProvidersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cp.ref.InternalTokens()
}

func (cp commonConfigsCustomProvidersAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("display_name"))
}

func (cp commonConfigsCustomProvidersAttributes) Domains() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cp.ref.Append("domains"))
}

func (cp commonConfigsCustomProvidersAttributes) IsProviderVisible() terra.BoolValue {
	return terra.ReferenceAsBool(cp.ref.Append("is_provider_visible"))
}

func (cp commonConfigsCustomProvidersAttributes) LogoUrl() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("logo_url"))
}

func (cp commonConfigsCustomProvidersAttributes) ProviderName() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("provider_name"))
}

func (cp commonConfigsCustomProvidersAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("type"))
}

type commonConfigsMfaAttributes struct {
	ref terra.Reference
}

func (m commonConfigsMfaAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m commonConfigsMfaAttributes) InternalWithRef(ref terra.Reference) commonConfigsMfaAttributes {
	return commonConfigsMfaAttributes{ref: ref}
}

func (m commonConfigsMfaAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m commonConfigsMfaAttributes) AllowedMethods() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](m.ref.Append("allowed_methods"))
}

func (m commonConfigsMfaAttributes) Setting() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("setting"))
}

func (m commonConfigsMfaAttributes) TimeIntervalInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(m.ref.Append("time_interval_in_seconds"))
}

type commonConfigsOperationsAllowedGroupsAttributes struct {
	ref terra.Reference
}

func (oag commonConfigsOperationsAllowedGroupsAttributes) InternalRef() (terra.Reference, error) {
	return oag.ref, nil
}

func (oag commonConfigsOperationsAllowedGroupsAttributes) InternalWithRef(ref terra.Reference) commonConfigsOperationsAllowedGroupsAttributes {
	return commonConfigsOperationsAllowedGroupsAttributes{ref: ref}
}

func (oag commonConfigsOperationsAllowedGroupsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return oag.ref.InternalTokens()
}

func (oag commonConfigsOperationsAllowedGroupsAttributes) DefaultRoles() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](oag.ref.Append("default_roles"))
}

func (oag commonConfigsOperationsAllowedGroupsAttributes) GroupId() terra.StringValue {
	return terra.ReferenceAsString(oag.ref.Append("group_id"))
}

func (oag commonConfigsOperationsAllowedGroupsAttributes) Roles() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](oag.ref.Append("roles"))
}

type commonConfigsSamlProvidersAttributes struct {
	ref terra.Reference
}

func (sp commonConfigsSamlProvidersAttributes) InternalRef() (terra.Reference, error) {
	return sp.ref, nil
}

func (sp commonConfigsSamlProvidersAttributes) InternalWithRef(ref terra.Reference) commonConfigsSamlProvidersAttributes {
	return commonConfigsSamlProvidersAttributes{ref: ref}
}

func (sp commonConfigsSamlProvidersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sp.ref.InternalTokens()
}

func (sp commonConfigsSamlProvidersAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("display_name"))
}

func (sp commonConfigsSamlProvidersAttributes) Domains() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](sp.ref.Append("domains"))
}

func (sp commonConfigsSamlProvidersAttributes) IsProviderVisible() terra.BoolValue {
	return terra.ReferenceAsBool(sp.ref.Append("is_provider_visible"))
}

func (sp commonConfigsSamlProvidersAttributes) LogoUrl() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("logo_url"))
}

func (sp commonConfigsSamlProvidersAttributes) ProviderName() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("provider_name"))
}

func (sp commonConfigsSamlProvidersAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("type"))
}

type commonConfigsSocialProvidersAttributes struct {
	ref terra.Reference
}

func (sp commonConfigsSocialProvidersAttributes) InternalRef() (terra.Reference, error) {
	return sp.ref, nil
}

func (sp commonConfigsSocialProvidersAttributes) InternalWithRef(ref terra.Reference) commonConfigsSocialProvidersAttributes {
	return commonConfigsSocialProvidersAttributes{ref: ref}
}

func (sp commonConfigsSocialProvidersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sp.ref.InternalTokens()
}

func (sp commonConfigsSocialProvidersAttributes) ProviderName() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("provider_name"))
}

func (sp commonConfigsSocialProvidersAttributes) SocialId() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("social_id"))
}

type customProvidersAttributes struct {
	ref terra.Reference
}

func (cp customProvidersAttributes) InternalRef() (terra.Reference, error) {
	return cp.ref, nil
}

func (cp customProvidersAttributes) InternalWithRef(ref terra.Reference) customProvidersAttributes {
	return customProvidersAttributes{ref: ref}
}

func (cp customProvidersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cp.ref.InternalTokens()
}

func (cp customProvidersAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("display_name"))
}

func (cp customProvidersAttributes) Domains() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](cp.ref.Append("domains"))
}

func (cp customProvidersAttributes) IsProviderVisible() terra.BoolValue {
	return terra.ReferenceAsBool(cp.ref.Append("is_provider_visible"))
}

func (cp customProvidersAttributes) LogoUrl() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("logo_url"))
}

func (cp customProvidersAttributes) ProviderName() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("provider_name"))
}

func (cp customProvidersAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(cp.ref.Append("type"))
}

type groupSelectionAttributes struct {
	ref terra.Reference
}

func (gs groupSelectionAttributes) InternalRef() (terra.Reference, error) {
	return gs.ref, nil
}

func (gs groupSelectionAttributes) InternalWithRef(ref terra.Reference) groupSelectionAttributes {
	return groupSelectionAttributes{ref: ref}
}

func (gs groupSelectionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return gs.ref.InternalTokens()
}

func (gs groupSelectionAttributes) AlwaysShowGroupSelection() terra.BoolValue {
	return terra.ReferenceAsBool(gs.ref.Append("always_show_group_selection"))
}

func (gs groupSelectionAttributes) SelectableGroupTypes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](gs.ref.Append("selectable_group_types"))
}

func (gs groupSelectionAttributes) SelectableGroups() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](gs.ref.Append("selectable_groups"))
}

type loginSpiAttributes struct {
	ref terra.Reference
}

func (ls loginSpiAttributes) InternalRef() (terra.Reference, error) {
	return ls.ref, nil
}

func (ls loginSpiAttributes) InternalWithRef(ref terra.Reference) loginSpiAttributes {
	return loginSpiAttributes{ref: ref}
}

func (ls loginSpiAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ls.ref.InternalTokens()
}

func (ls loginSpiAttributes) OauthClientId() terra.StringValue {
	return terra.ReferenceAsString(ls.ref.Append("oauth_client_id"))
}

func (ls loginSpiAttributes) SpiUrl() terra.StringValue {
	return terra.ReferenceAsString(ls.ref.Append("spi_url"))
}

type mfaAttributes struct {
	ref terra.Reference
}

func (m mfaAttributes) InternalRef() (terra.Reference, error) {
	return m.ref, nil
}

func (m mfaAttributes) InternalWithRef(ref terra.Reference) mfaAttributes {
	return mfaAttributes{ref: ref}
}

func (m mfaAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return m.ref.InternalTokens()
}

func (m mfaAttributes) AllowedMethods() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](m.ref.Append("allowed_methods"))
}

func (m mfaAttributes) Setting() terra.StringValue {
	return terra.ReferenceAsString(m.ref.Append("setting"))
}

func (m mfaAttributes) TimeIntervalInSeconds() terra.NumberValue {
	return terra.ReferenceAsNumber(m.ref.Append("time_interval_in_seconds"))
}

type mobileSettingsAttributes struct {
	ref terra.Reference
}

func (ms mobileSettingsAttributes) InternalRef() (terra.Reference, error) {
	return ms.ref, nil
}

func (ms mobileSettingsAttributes) InternalWithRef(ref terra.Reference) mobileSettingsAttributes {
	return mobileSettingsAttributes{ref: ref}
}

func (ms mobileSettingsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return ms.ref.InternalTokens()
}

func (ms mobileSettingsAttributes) BundleId() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("bundle_id"))
}

func (ms mobileSettingsAttributes) KeyHash() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("key_hash"))
}

func (ms mobileSettingsAttributes) PackageName() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("package_name"))
}

func (ms mobileSettingsAttributes) TeamId() terra.StringValue {
	return terra.ReferenceAsString(ms.ref.Append("team_id"))
}

type operationsAllowedGroupsAttributes struct {
	ref terra.Reference
}

func (oag operationsAllowedGroupsAttributes) InternalRef() (terra.Reference, error) {
	return oag.ref, nil
}

func (oag operationsAllowedGroupsAttributes) InternalWithRef(ref terra.Reference) operationsAllowedGroupsAttributes {
	return operationsAllowedGroupsAttributes{ref: ref}
}

func (oag operationsAllowedGroupsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return oag.ref.InternalTokens()
}

func (oag operationsAllowedGroupsAttributes) DefaultRoles() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](oag.ref.Append("default_roles"))
}

func (oag operationsAllowedGroupsAttributes) GroupId() terra.StringValue {
	return terra.ReferenceAsString(oag.ref.Append("group_id"))
}

func (oag operationsAllowedGroupsAttributes) Roles() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](oag.ref.Append("roles"))
}

type samlProvidersAttributes struct {
	ref terra.Reference
}

func (sp samlProvidersAttributes) InternalRef() (terra.Reference, error) {
	return sp.ref, nil
}

func (sp samlProvidersAttributes) InternalWithRef(ref terra.Reference) samlProvidersAttributes {
	return samlProvidersAttributes{ref: ref}
}

func (sp samlProvidersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sp.ref.InternalTokens()
}

func (sp samlProvidersAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("display_name"))
}

func (sp samlProvidersAttributes) Domains() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](sp.ref.Append("domains"))
}

func (sp samlProvidersAttributes) IsProviderVisible() terra.BoolValue {
	return terra.ReferenceAsBool(sp.ref.Append("is_provider_visible"))
}

func (sp samlProvidersAttributes) LogoUrl() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("logo_url"))
}

func (sp samlProvidersAttributes) ProviderName() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("provider_name"))
}

func (sp samlProvidersAttributes) Type() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("type"))
}

type socialProvidersAttributes struct {
	ref terra.Reference
}

func (sp socialProvidersAttributes) InternalRef() (terra.Reference, error) {
	return sp.ref, nil
}

func (sp socialProvidersAttributes) InternalWithRef(ref terra.Reference) socialProvidersAttributes {
	return socialProvidersAttributes{ref: ref}
}

func (sp socialProvidersAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return sp.ref.InternalTokens()
}

func (sp socialProvidersAttributes) ProviderName() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("provider_name"))
}

func (sp socialProvidersAttributes) SocialId() terra.StringValue {
	return terra.ReferenceAsString(sp.ref.Append("social_id"))
}

type AdProvidersState struct {
	DisplayName       string   `json:"display_name"`
	Domains           []string `json:"domains"`
	IsProviderVisible bool     `json:"is_provider_visible"`
	LogoUrl           string   `json:"logo_url"`
	ProviderName      string   `json:"provider_name"`
	Type              string   `json:"type"`
}

type AllowGuestLoginGroupsState struct {
	DefaultRoles []string `json:"default_roles"`
	GroupId      string   `json:"group_id"`
	Roles        []string `json:"roles"`
}

type AllowedGroupsState struct {
	DefaultRoles []string `json:"default_roles"`
	GroupId      string   `json:"group_id"`
	Roles        []string `json:"roles"`
}

type CommonConfigsState struct {
	AccentColor                   string                                      `json:"accent_color"`
	AllowGuestLogin               bool                                        `json:"allow_guest_login"`
	AllowLoginWith                []string                                    `json:"allow_login_with"`
	AllowedLogoutUrls             []string                                    `json:"allowed_logout_urls"`
	AllowedMfa                    []string                                    `json:"allowed_mfa"`
	AllowedOrigins                []string                                    `json:"allowed_origins"`
	AllowedRoles                  []string                                    `json:"allowed_roles"`
	AllowedScopes                 []string                                    `json:"allowed_scopes"`
	AllowedWebOrigins             []string                                    `json:"allowed_web_origins"`
	AlwaysAskMfa                  bool                                        `json:"always_ask_mfa"`
	AutoLoginAfterRegister        bool                                        `json:"auto_login_after_register"`
	BotProvider                   string                                      `json:"bot_provider"`
	ClientType                    string                                      `json:"client_type"`
	CompanyAddress                string                                      `json:"company_address"`
	CompanyName                   string                                      `json:"company_name"`
	CompanyWebsite                string                                      `json:"company_website"`
	DefaultMaxAge                 float64                                     `json:"default_max_age"`
	DefaultRoles                  []string                                    `json:"default_roles"`
	DefaultScopes                 []string                                    `json:"default_scopes"`
	Editable                      bool                                        `json:"editable"`
	EmailVerificationRequired     bool                                        `json:"email_verification_required"`
	EnableClassicalProvider       bool                                        `json:"enable_classical_provider"`
	EnableDeduplication           bool                                        `json:"enable_deduplication"`
	EnablePasswordlessAuth        bool                                        `json:"enable_passwordless_auth"`
	Enabled                       bool                                        `json:"enabled"`
	FdsEnabled                    bool                                        `json:"fds_enabled"`
	GrantTypes                    []string                                    `json:"grant_types"`
	HostedPageGroup               string                                      `json:"hosted_page_group"`
	IdTokenLifetimeInSeconds      float64                                     `json:"id_token_lifetime_in_seconds"`
	IsHybridApp                   bool                                        `json:"is_hybrid_app"`
	IsRememberMeSelected          bool                                        `json:"is_remember_me_selected"`
	LoginProviders                []string                                    `json:"login_providers"`
	LogoAlign                     string                                      `json:"logo_align"`
	MediaType                     string                                      `json:"media_type"`
	PendingScopes                 []string                                    `json:"pending_scopes"`
	PrimaryColor                  string                                      `json:"primary_color"`
	RedirectUris                  []string                                    `json:"redirect_uris"`
	RefreshTokenLifetimeInSeconds float64                                     `json:"refresh_token_lifetime_in_seconds"`
	RegisterWithLoginInformation  bool                                        `json:"register_with_login_information"`
	ResponseTypes                 []string                                    `json:"response_types"`
	TemplateGroupId               string                                      `json:"template_group_id"`
	TokenLifetimeInSeconds        float64                                     `json:"token_lifetime_in_seconds"`
	Webfinger                     string                                      `json:"webfinger"`
	AdProviders                   []CommonConfigsAdProvidersState             `json:"ad_providers"`
	AllowedGroups                 []CommonConfigsAllowedGroupsState           `json:"allowed_groups"`
	CustomProviders               []CommonConfigsCustomProvidersState         `json:"custom_providers"`
	Mfa                           *CommonConfigsMfaState                      `json:"mfa"`
	OperationsAllowedGroups       []CommonConfigsOperationsAllowedGroupsState `json:"operations_allowed_groups"`
	SamlProviders                 []CommonConfigsSamlProvidersState           `json:"saml_providers"`
	SocialProviders               []CommonConfigsSocialProvidersState         `json:"social_providers"`
}

type CommonConfigsAdProvidersState struct {
	DisplayName       string   `json:"display_name"`
	Domains           []string `json:"domains"`
	IsProviderVisible bool     `json:"is_provider_visible"`
	LogoUrl           string   `json:"logo_url"`
	ProviderName      string   `json:"provider_name"`
	Type              string   `json:"type"`
}

type CommonConfigsAllowedGroupsState struct {
	DefaultRoles []string `json:"default_roles"`
	GroupId      string   `json:"group_id"`
	Roles        []string `json:"roles"`
}

type CommonConfigsCustomProvidersState struct {
	DisplayName       string   `json:"display_name"`
	Domains           []string `json:"domains"`
	IsProviderVisible bool     `json:"is_provider_visible"`
	LogoUrl           string   `json:"logo_url"`
	ProviderName      string   `json:"provider_name"`
	Type              string   `json:"type"`
}

type CommonConfigsMfaState struct {
	AllowedMethods        []string `json:"allowed_methods"`
	Setting               string   `json:"setting"`
	TimeIntervalInSeconds float64  `json:"time_interval_in_seconds"`
}

type CommonConfigsOperationsAllowedGroupsState struct {
	DefaultRoles []string `json:"default_roles"`
	GroupId      string   `json:"group_id"`
	Roles        []string `json:"roles"`
}

type CommonConfigsSamlProvidersState struct {
	DisplayName       string   `json:"display_name"`
	Domains           []string `json:"domains"`
	IsProviderVisible bool     `json:"is_provider_visible"`
	LogoUrl           string   `json:"logo_url"`
	ProviderName      string   `json:"provider_name"`
	Type              string   `json:"type"`
}

type CommonConfigsSocialProvidersState struct {
	ProviderName string `json:"provider_name"`
	SocialId     string `json:"social_id"`
}

type CustomProvidersState struct {
	DisplayName       string   `json:"display_name"`
	Domains           []string `json:"domains"`
	IsProviderVisible bool     `json:"is_provider_visible"`
	LogoUrl           string   `json:"logo_url"`
	ProviderName      string   `json:"provider_name"`
	Type              string   `json:"type"`
}

type GroupSelectionState struct {
	AlwaysShowGroupSelection bool     `json:"always_show_group_selection"`
	SelectableGroupTypes     []string `json:"selectable_group_types"`
	SelectableGroups         []string `json:"selectable_groups"`
}

type LoginSpiState struct {
	OauthClientId string `json:"oauth_client_id"`
	SpiUrl        string `json:"spi_url"`
}

type MfaState struct {
	AllowedMethods        []string `json:"allowed_methods"`
	Setting               string   `json:"setting"`
	TimeIntervalInSeconds float64  `json:"time_interval_in_seconds"`
}

type MobileSettingsState struct {
	BundleId    string `json:"bundle_id"`
	KeyHash     string `json:"key_hash"`
	PackageName string `json:"package_name"`
	TeamId      string `json:"team_id"`
}

type OperationsAllowedGroupsState struct {
	DefaultRoles []string `json:"default_roles"`
	GroupId      string   `json:"group_id"`
	Roles        []string `json:"roles"`
}

type SamlProvidersState struct {
	DisplayName       string   `json:"display_name"`
	Domains           []string `json:"domains"`
	IsProviderVisible bool     `json:"is_provider_visible"`
	LogoUrl           string   `json:"logo_url"`
	ProviderName      string   `json:"provider_name"`
	Type              string   `json:"type"`
}

type SocialProvidersState struct {
	ProviderName string `json:"provider_name"`
	SocialId     string `json:"social_id"`
}
-- out/cidaas_custom_provider/cidaas_custom_provider.go --
// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package cidaas_custom_provider

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource cidaas_custom_provider.
type Resource struct {
	Name      string
	Args      Args
	state     *cidaasCustomProviderState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (ccp *Resource) Type() string {
	return "cidaas_custom_provider"
}

// LocalName returns the local name for [Resource].
func (ccp *Resource) LocalName() string {
	return ccp.Name
}

// Configuration returns the configuration (args) for [Resource].
func (ccp *Resource) Configuration() interface{} {
	return ccp.Args
}

// DependOn is used for other resources to depend on [Resource].
func (ccp *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(ccp)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (ccp *Resource) Dependencies() terra.Dependencies {
	return ccp.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (ccp *Resource) LifecycleManagement() *terra.Lifecycle {
	return ccp.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (ccp *Resource) Attributes() cidaasCustomProviderAttributes {
	return cidaasCustomProviderAttributes{ref: terra.ReferenceResource(ccp)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (ccp *Resource) ImportState(state io.Reader) error {
	ccp.state = &cidaasCustomProviderState{}
	if err := json.NewDecoder(state).Decode(ccp.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", ccp.Type(), ccp.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (ccp *Resource) State() (*cidaasCustomProviderState, bool) {
	return ccp.state, ccp.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (ccp *Resource) StateMust() *cidaasCustomProviderState {
	if ccp.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", ccp.Type(), ccp.LocalName()))
	}
	return ccp.state
}

// Args contains the configurations for cidaas_custom_provider.
type Args struct {
	// AuthorizationEndpoint: string, required
	AuthorizationEndpoint terra.StringValue `hcl:"authorization_endpoint,attr" validate:"required"`
	// ClientId: string, required
	ClientId terra.StringValue `hcl:"client_id,attr" validate:"required"`
	// ClientSecret: string, required
	ClientSecret terra.StringValue `hcl:"client_secret,attr" validate:"required"`
	// DisplayName: string, required
	DisplayName terra.StringValue `hcl:"display_name,attr" validate:"required"`
	// Domains: set of string, optional
	Domains terra.SetValue[terra.StringValue] `hcl:"domains,attr"`
	// LogoUrl: string, optional
	LogoUrl terra.StringValue `hcl:"logo_url,attr"`
	// ProviderName: string, required
	ProviderName terra.StringValue `hcl:"provider_name,attr" validate:"required"`
	// ScopeDisplayLabel: string, required
	ScopeDisplayLabel terra.StringValue `hcl:"scope_display_label,attr" validate:"required"`
	// StandardType: string, optional
	StandardType terra.StringValue `hcl:"standard_type,attr"`
	// TokenEndpoint: string, required
	TokenEndpoint terra.StringValue `hcl:"token_endpoint,attr" validate:"required"`
	// UserinfoEndpoint: string, required
	UserinfoEndpoint terra.StringValue `hcl:"userinfo_endpoint,attr" validate:"required"`
	// Scopes: min=0
	Scopes []Scopes `hcl:"scopes,attr" validate:"min=0"`
	// UserinfoFields: optional
	UserinfoFields *UserinfoFields `hcl:"userinfo_fields,attr"`
}

type cidaasCustomProviderAttributes struct {
	ref terra.Reference
}

// AuthorizationEndpoint returns a reference to field authorization_endpoint of cidaas_custom_provider.
func (ccp cidaasCustomProviderAttributes) AuthorizationEndpoint() terra.StringValue {
	return terra.ReferenceAsString(ccp.ref.Append("authorization_endpoint"))
}

// ClientId returns a reference to field client_id of cidaas_custom_provider.
func (ccp cidaasCustomProviderAttributes) ClientId() terra.StringValue {
	return terra.ReferenceAsString(ccp.ref.Append("client_id"))
}

// ClientSecret returns a reference to field client_secret of cidaas_custom_provider.
func (ccp cidaasCustomProviderAttributes) ClientSecret() terra.StringValue {
	return terra.ReferenceAsString(ccp.ref.Append("client_secret"))
}

// DisplayName returns a reference to field display_name of cidaas_custom_provider.
func (ccp cidaasCustomProviderAttributes) DisplayName() terra.StringValue {
	return terra.ReferenceAsString(ccp.ref.Append("display_name"))
}

// Domains returns a reference to field domains of cidaas_custom_provider.
func (ccp cidaasCustomProviderAttributes) Domains() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](ccp.ref.Append("domains"))
}

// Id returns a reference to field id of cidaas_custom_provider.
func (ccp cidaasCustomProviderAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(ccp.ref.Append("id"))
}

// LogoUrl returns a reference to field logo_url of cidaas_custom_provider.
func (ccp cidaasCustomProviderAttributes) LogoUrl() terra.StringValue {
	return terra.ReferenceAsString(ccp.ref.Append("logo_url"))
}

// ProviderName returns a reference to field provider_name of cidaas_custom_provider.
func (ccp cidaasCustomProviderAttributes) ProviderName() terra.StringValue {
	return terra.ReferenceAsString(ccp.ref.Append("provider_name"))
}

// ScopeDisplayLabel returns a reference to field scope_display_label of cidaas_custom_provider.
func (ccp cidaasCustomProviderAttributes) ScopeDisplayLabel() terra.StringValue {
	return terra.ReferenceAsString(ccp.ref.Append("scope_display_label"))
}

// StandardType returns a reference to field standard_type of cidaas_custom_provider.
func (ccp cidaasCustomProviderAttributes) StandardType() terra.StringValue {
	return terra.ReferenceAsString(ccp.ref.Append("standard_type"))
}

// TokenEndpoint returns a reference to field token_endpoint of cidaas_custom_provider.
func (ccp cidaasCustomProviderAttributes) TokenEndpoint() terra.StringValue {
	return terra.ReferenceAsString(ccp.ref.Append("token_endpoint"))
}

// UserinfoEndpoint returns a reference to field userinfo_endpoint of cidaas_custom_provider.
func (ccp cidaasCustomProviderAttributes) UserinfoEndpoint() terra.StringValue {
	return terra.ReferenceAsString(ccp.ref.Append("userinfo_endpoint"))
}

func (ccp cidaasCustomProviderAttributes) Scopes() terra.ListValue[scopesAttributes] {
	return terra.ReferenceAsList[scopesAttributes](ccp.ref.Append("scopes"))
}

func (ccp cidaasCustomProviderAttributes) UserinfoFields() userinfoFieldsAttributes {
	return terra.ReferenceAsSingle[userinfoFieldsAttributes](ccp.ref.Append("userinfo_fields"))
}

type cidaasCustomProviderState struct {
	AuthorizationEndpoint string               `json:"authorization_endpoint"`
	ClientId              string               `json:"client_id"`
	ClientSecret          string               `json:"client_secret"`
	DisplayName           string               `json:"display_name"`
	Domains               []string             `json:"domains"`
	Id                    string               `json:"id"`
	LogoUrl               string               `json:"logo_url"`
	ProviderName          string               `json:"provider_name"`
	ScopeDisplayLabel     string               `json:"scope_display_label"`
	StandardType          string               `json:"standard_type"`
	TokenEndpoint         string               `json:"token_endpoint"`
	UserinfoEndpoint      string               `json:"userinfo_endpoint"`
	Scopes                []ScopesState        `json:"scopes"`
	UserinfoFields        *UserinfoFieldsState `json:"userinfo_fields"`
}
-- out/cidaas_custom_provider/cidaas_custom_provider_types.go --
// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package cidaas_custom_provider

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type Scopes struct {
	// Recommended: bool, optional
	Recommended terra.BoolValue `hcl:"recommended,attr"`
	// Required: bool, optional
	Required terra.BoolValue `hcl:"required,attr"`
	// ScopeName: string, optional
	ScopeName terra.StringValue `hcl:"scope_name,attr"`
}

type UserinfoFields struct {
	// Address: string, optional
	Address terra.StringValue `hcl:"address,attr"`
	// Birthdate: string, optional
	Birthdate terra.StringValue `hcl:"birthdate,attr"`
	// CustomFields: map of string, optional
	CustomFields terra.MapValue[terra.StringValue] `hcl:"custom_fields,attr"`
	// Email: string, optional
	Email terra.StringValue `hcl:"email,attr"`
	// EmailVerified: string, optional
	EmailVerified terra.StringValue `hcl:"email_verified,attr"`
	// FamilyName: string, optional
	FamilyName terra.StringValue `hcl:"family_name,attr"`
	// Gender: string, optional
	Gender terra.StringValue `hcl:"gender,attr"`
	// GivenName: string, optional
	GivenName terra.StringValue `hcl:"given_name,attr"`
	// Locale: string, optional
	Locale terra.StringValue `hcl:"locale,attr"`
	// MiddleName: string, optional
	MiddleName terra.StringValue `hcl:"middle_name,attr"`
	// MobileNumber: string, optional
	MobileNumber terra.StringValue `hcl:"mobile_number,attr"`
	// Name: string, optional
	Name terra.StringValue `hcl:"name,attr"`
	// Nickname: string, optional
	Nickname terra.StringValue `hcl:"nickname,attr"`
	// PhoneNumber: string, optional
	PhoneNumber terra.StringValue `hcl:"phone_number,attr"`
	// Picture: string, optional
	Picture terra.StringValue `hcl:"picture,attr"`
	// PreferredUsername: string, optional
	PreferredUsername terra.StringValue `hcl:"preferred_username,attr"`
	// Profile: string, optional
	Profile terra.StringValue `hcl:"profile,attr"`
	// Sub: string, optional
	Sub terra.StringValue `hcl:"sub,attr"`
	// UpdatedAt: string, optional
	UpdatedAt terra.StringValue `hcl:"updated_at,attr"`
	// Website: string, optional
	Website terra.StringValue `hcl:"website,attr"`
	// Zoneinfo: string, optional
	Zoneinfo terra.StringValue `hcl:"zoneinfo,attr"`
}

type scopesAttributes struct {
	ref terra.Reference
}

func (s scopesAttributes) InternalRef() (terra.Reference, error) {
	return s.ref, nil
}

func (s scopesAttributes) InternalWithRef(ref terra.Reference) scopesAttributes {
	return scopesAttributes{ref: ref}
}

func (s scopesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return s.ref.InternalTokens()
}

func (s scopesAttributes) Recommended() terra.BoolValue {
	return terra.ReferenceAsBool(s.ref.Append("recommended"))
}

func (s scopesAttributes) Required() terra.BoolValue {
	return terra.ReferenceAsBool(s.ref.Append("required"))
}

func (s scopesAttributes) ScopeName() terra.StringValue {
	return terra.ReferenceAsString(s.ref.Append("scope_name"))
}

type userinfoFieldsAttributes struct {
	ref terra.Reference
}

func (uf userinfoFieldsAttributes) InternalRef() (terra.Reference, error) {
	return uf.ref, nil
}

func (uf userinfoFieldsAttributes) InternalWithRef(ref terra.Reference) userinfoFieldsAttributes {
	return userinfoFieldsAttributes{ref: ref}
}

func (uf userinfoFieldsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return uf.ref.InternalTokens()
}

func (uf userinfoFieldsAttributes) Address() terra.StringValue {
	return terra.ReferenceAsString(uf.ref.Append("address"))
}

func (uf userinfoFieldsAttributes) Birthdate() terra.StringValue {
	return terra.ReferenceAsString(uf.ref.Append("birthdate"))
}

func (uf userinfoFieldsAttributes) CustomFields() terra.MapValue[terra.StringValue] {
	return terra.ReferenceAsMap[terra.StringValue](uf.ref.Append("custom_fields"))
}

func (uf userinfoFieldsAttributes) Email() terra.StringValue {
	return terra.ReferenceAsString(uf.ref.Append("email"))
}

func (uf userinfoFieldsAttributes) EmailVerified() terra.StringValue {
	return terra.ReferenceAsString(uf.ref.Append("email_verified"))
}

func (uf userinfoFieldsAttributes) FamilyName() terra.StringValue {
	return terra.ReferenceAsString(uf.ref.Append("family_name"))
}

func (uf userinfoFieldsAttributes) Gender() terra.StringValue {
	return terra.ReferenceAsString(uf.ref.Append("gender"))
}

func (uf userinfoFieldsAttributes) GivenName() terra.StringValue {
	return terra.ReferenceAsString(uf.ref.Append("given_name"))
}

func (uf userinfoFieldsAttributes) Locale() terra.StringValue {
	return terra.ReferenceAsString(uf.ref.Append("locale"))
}

func (uf userinfoFieldsAttributes) MiddleName() terra.StringValue {
	return terra.ReferenceAsString(uf.ref.Append("middle_name"))
}

func (uf userinfoFieldsAttributes) MobileNumber() terra.StringValue {
	return terra.ReferenceAsString(uf.ref.Append("mobile_number"))
}

func (uf userinfoFieldsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(uf.ref.Append("name"))
}

func (uf userinfoFieldsAttributes) Nickname() terra.StringValue {
	return terra.ReferenceAsString(uf.ref.Append("nickname"))
}

func (uf userinfoFieldsAttributes) PhoneNumber() terra.StringValue {
	return terra.ReferenceAsString(uf.ref.Append("phone_number"))
}

func (uf userinfoFieldsAttributes) Picture() terra.StringValue {
	return terra.ReferenceAsString(uf.ref.Append("picture"))
}

func (uf userinfoFieldsAttributes) PreferredUsername() terra.StringValue {
	return terra.ReferenceAsString(uf.ref.Append("preferred_username"))
}

func (uf userinfoFieldsAttributes) Profile() terra.StringValue {
	return terra.ReferenceAsString(uf.ref.Append("profile"))
}

func (uf userinfoFieldsAttributes) Sub() terra.StringValue {
	return terra.ReferenceAsString(uf.ref.Append("sub"))
}

func (uf userinfoFieldsAttributes) UpdatedAt() terra.StringValue {
	return terra.ReferenceAsString(uf.ref.Append("updated_at"))
}

func (uf userinfoFieldsAttributes) Website() terra.StringValue {
	return terra.ReferenceAsString(uf.ref.Append("website"))
}

func (uf userinfoFieldsAttributes) Zoneinfo() terra.StringValue {
	return terra.ReferenceAsString(uf.ref.Append("zoneinfo"))
}

type ScopesState struct {
	Recommended bool   `json:"recommended"`
	Required    bool   `json:"required"`
	ScopeName   string `json:"scope_name"`
}

type UserinfoFieldsState struct {
	Address           string            `json:"address"`
	Birthdate         string            `json:"birthdate"`
	CustomFields      map[string]string `json:"custom_fields"`
	Email             string            `json:"email"`
	EmailVerified     string            `json:"email_verified"`
	FamilyName        string            `json:"family_name"`
	Gender            string            `json:"gender"`
	GivenName         string            `json:"given_name"`
	Locale            string            `json:"locale"`
	MiddleName        string            `json:"middle_name"`
	MobileNumber      string            `json:"mobile_number"`
	Name              string            `json:"name"`
	Nickname          string            `json:"nickname"`
	PhoneNumber       string            `json:"phone_number"`
	Picture           string            `json:"picture"`
	PreferredUsername string            `json:"preferred_username"`
	Profile           string            `json:"profile"`
	Sub               string            `json:"sub"`
	UpdatedAt         string            `json:"updated_at"`
	Website           string            `json:"website"`
	Zoneinfo          string            `json:"zoneinfo"`
}
-- out/cidaas_registration_field/cidaas_registration_field.go --
// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package cidaas_registration_field

import (
	"encoding/json"
	"fmt"
	"github.com/golingon/lingon/pkg/terra"
	"io"
)

var _ terra.Resource = (*Resource)(nil)

// Resource represents the Terraform resource cidaas_registration_field.
type Resource struct {
	Name      string
	Args      Args
	state     *cidaasRegistrationFieldState
	DependsOn terra.Dependencies
	Lifecycle *terra.Lifecycle
}

// Type returns the Terraform object type for [Resource].
func (crf *Resource) Type() string {
	return "cidaas_registration_field"
}

// LocalName returns the local name for [Resource].
func (crf *Resource) LocalName() string {
	return crf.Name
}

// Configuration returns the configuration (args) for [Resource].
func (crf *Resource) Configuration() interface{} {
	return crf.Args
}

// DependOn is used for other resources to depend on [Resource].
func (crf *Resource) DependOn() terra.Reference {
	return terra.ReferenceResource(crf)
}

// Dependencies returns the list of resources [Resource] depends_on.
func (crf *Resource) Dependencies() terra.Dependencies {
	return crf.DependsOn
}

// LifecycleManagement returns the lifecycle block for [Resource].
func (crf *Resource) LifecycleManagement() *terra.Lifecycle {
	return crf.Lifecycle
}

// Attributes returns the attributes for [Resource].
func (crf *Resource) Attributes() cidaasRegistrationFieldAttributes {
	return cidaasRegistrationFieldAttributes{ref: terra.ReferenceResource(crf)}
}

// ImportState imports the given attribute values into [Resource]'s state.
func (crf *Resource) ImportState(state io.Reader) error {
	crf.state = &cidaasRegistrationFieldState{}
	if err := json.NewDecoder(state).Decode(crf.state); err != nil {
		return fmt.Errorf("decoding state into resource %s.%s: %w", crf.Type(), crf.LocalName(), err)
	}
	return nil
}

// State returns the state and a bool indicating if [Resource] has state.
func (crf *Resource) State() (*cidaasRegistrationFieldState, bool) {
	return crf.state, crf.state != nil
}

// StateMust returns the state for [Resource]. Panics if the state is nil.
func (crf *Resource) StateMust() *cidaasRegistrationFieldState {
	if crf.state == nil {
		panic(fmt.Sprintf("state is nil for resource %s.%s", crf.Type(), crf.LocalName()))
	}
	return crf.state
}

// Args contains the configurations for cidaas_registration_field.
type Args struct {
	// Claimable: bool, optional
	Claimable terra.BoolValue `hcl:"claimable,attr"`
	// ConsentRefs: set of string, optional
	ConsentRefs terra.SetValue[terra.StringValue] `hcl:"consent_refs,attr"`
	// DataType: string, required
	DataType terra.StringValue `hcl:"data_type,attr" validate:"required"`
	// Enabled: bool, optional
	Enabled terra.BoolValue `hcl:"enabled,attr"`
	// FieldKey: string, required
	FieldKey terra.StringValue `hcl:"field_key,attr" validate:"required"`
	// FieldType: string, optional
	FieldType terra.StringValue `hcl:"field_type,attr"`
	// Internal: bool, optional
	Internal terra.BoolValue `hcl:"internal,attr"`
	// IsGroup: bool, optional
	IsGroup terra.BoolValue `hcl:"is_group,attr"`
	// IsList: bool, optional
	IsList terra.BoolValue `hcl:"is_list,attr"`
	// IsSearchable: bool, optional
	IsSearchable terra.BoolValue `hcl:"is_searchable,attr"`
	// Order: number, optional
	Order terra.NumberValue `hcl:"order,attr"`
	// OverwriteWithNullValueFromSocialProvider: bool, optional
	OverwriteWithNullValueFromSocialProvider terra.BoolValue `hcl:"overwrite_with_null_value_from_social_provider,attr"`
	// ParentGroupId: string, optional
	ParentGroupId terra.StringValue `hcl:"parent_group_id,attr"`
	// ReadOnly: bool, optional
	ReadOnly terra.BoolValue `hcl:"read_only,attr"`
	// Required: bool, optional
	Required terra.BoolValue `hcl:"required,attr"`
	// Scopes: set of string, optional
	Scopes terra.SetValue[terra.StringValue] `hcl:"scopes,attr"`
	// Unique: bool, optional
	Unique terra.BoolValue `hcl:"unique,attr"`
	// FieldDefinition: optional
	FieldDefinition *FieldDefinition `hcl:"field_definition,attr"`
	// LocalTexts: min=0
	LocalTexts []LocalTexts `hcl:"local_texts,attr" validate:"min=0"`
}

type cidaasRegistrationFieldAttributes struct {
	ref terra.Reference
}

// BaseDataType returns a reference to field base_data_type of cidaas_registration_field.
func (crf cidaasRegistrationFieldAttributes) BaseDataType() terra.StringValue {
	return terra.ReferenceAsString(crf.ref.Append("base_data_type"))
}

// Claimable returns a reference to field claimable of cidaas_registration_field.
func (crf cidaasRegistrationFieldAttributes) Claimable() terra.BoolValue {
	return terra.ReferenceAsBool(crf.ref.Append("claimable"))
}

// ConsentRefs returns a reference to field consent_refs of cidaas_registration_field.
func (crf cidaasRegistrationFieldAttributes) ConsentRefs() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](crf.ref.Append("consent_refs"))
}

// DataType returns a reference to field data_type of cidaas_registration_field.
func (crf cidaasRegistrationFieldAttributes) DataType() terra.StringValue {
	return terra.ReferenceAsString(crf.ref.Append("data_type"))
}

// Enabled returns a reference to field enabled of cidaas_registration_field.
func (crf cidaasRegistrationFieldAttributes) Enabled() terra.BoolValue {
	return terra.ReferenceAsBool(crf.ref.Append("enabled"))
}

// FieldKey returns a reference to field field_key of cidaas_registration_field.
func (crf cidaasRegistrationFieldAttributes) FieldKey() terra.StringValue {
	return terra.ReferenceAsString(crf.ref.Append("field_key"))
}

// FieldType returns a reference to field field_type of cidaas_registration_field.
func (crf cidaasRegistrationFieldAttributes) FieldType() terra.StringValue {
	return terra.ReferenceAsString(crf.ref.Append("field_type"))
}

// Id returns a reference to field id of cidaas_registration_field.
func (crf cidaasRegistrationFieldAttributes) Id() terra.StringValue {
	return terra.ReferenceAsString(crf.ref.Append("id"))
}

// Internal returns a reference to field internal of cidaas_registration_field.
func (crf cidaasRegistrationFieldAttributes) Internal() terra.BoolValue {
	return terra.ReferenceAsBool(crf.ref.Append("internal"))
}

// IsGroup returns a reference to field is_group of cidaas_registration_field.
func (crf cidaasRegistrationFieldAttributes) IsGroup() terra.BoolValue {
	return terra.ReferenceAsBool(crf.ref.Append("is_group"))
}

// IsList returns a reference to field is_list of cidaas_registration_field.
func (crf cidaasRegistrationFieldAttributes) IsList() terra.BoolValue {
	return terra.ReferenceAsBool(crf.ref.Append("is_list"))
}

// IsSearchable returns a reference to field is_searchable of cidaas_registration_field.
func (crf cidaasRegistrationFieldAttributes) IsSearchable() terra.BoolValue {
	return terra.ReferenceAsBool(crf.ref.Append("is_searchable"))
}

// Order returns a reference to field order of cidaas_registration_field.
func (crf cidaasRegistrationFieldAttributes) Order() terra.NumberValue {
	return terra.ReferenceAsNumber(crf.ref.Append("order"))
}

// OverwriteWithNullValueFromSocialProvider returns a reference to field overwrite_with_null_value_from_social_provider of cidaas_registration_field.
func (crf cidaasRegistrationFieldAttributes) OverwriteWithNullValueFromSocialProvider() terra.BoolValue {
	return terra.ReferenceAsBool(crf.ref.Append("overwrite_with_null_value_from_social_provider"))
}

// ParentGroupId returns a reference to field parent_group_id of cidaas_registration_field.
func (crf cidaasRegistrationFieldAttributes) ParentGroupId() terra.StringValue {
	return terra.ReferenceAsString(crf.ref.Append("parent_group_id"))
}

// ReadOnly returns a reference to field read_only of cidaas_registration_field.
func (crf cidaasRegistrationFieldAttributes) ReadOnly() terra.BoolValue {
	return terra.ReferenceAsBool(crf.ref.Append("read_only"))
}

// Required returns a reference to field required of cidaas_registration_field.
func (crf cidaasRegistrationFieldAttributes) Required() terra.BoolValue {
	return terra.ReferenceAsBool(crf.ref.Append("required"))
}

// Scopes returns a reference to field scopes of cidaas_registration_field.
func (crf cidaasRegistrationFieldAttributes) Scopes() terra.SetValue[terra.StringValue] {
	return terra.ReferenceAsSet[terra.StringValue](crf.ref.Append("scopes"))
}

// Unique returns a reference to field unique of cidaas_registration_field.
func (crf cidaasRegistrationFieldAttributes) Unique() terra.BoolValue {
	return terra.ReferenceAsBool(crf.ref.Append("unique"))
}

func (crf cidaasRegistrationFieldAttributes) FieldDefinition() fieldDefinitionAttributes {
	return terra.ReferenceAsSingle[fieldDefinitionAttributes](crf.ref.Append("field_definition"))
}

func (crf cidaasRegistrationFieldAttributes) LocalTexts() terra.ListValue[localTextsAttributes] {
	return terra.ReferenceAsList[localTextsAttributes](crf.ref.Append("local_texts"))
}

type cidaasRegistrationFieldState struct {
	BaseDataType                             string                `json:"base_data_type"`
	Claimable                                bool                  `json:"claimable"`
	ConsentRefs                              []string              `json:"consent_refs"`
	DataType                                 string                `json:"data_type"`
	Enabled                                  bool                  `json:"enabled"`
	FieldKey                                 string                `json:"field_key"`
	FieldType                                string                `json:"field_type"`
	Id                                       string                `json:"id"`
	Internal                                 bool                  `json:"internal"`
	IsGroup                                  bool                  `json:"is_group"`
	IsList                                   bool                  `json:"is_list"`
	IsSearchable                             bool                  `json:"is_searchable"`
	Order                                    float64               `json:"order"`
	OverwriteWithNullValueFromSocialProvider bool                  `json:"overwrite_with_null_value_from_social_provider"`
	ParentGroupId                            string                `json:"parent_group_id"`
	ReadOnly                                 bool                  `json:"read_only"`
	Required                                 bool                  `json:"required"`
	Scopes                                   []string              `json:"scopes"`
	Unique                                   bool                  `json:"unique"`
	FieldDefinition                          *FieldDefinitionState `json:"field_definition"`
	LocalTexts                               []LocalTextsState     `json:"local_texts"`
}
-- out/cidaas_registration_field/cidaas_registration_field_types.go --
// CODE GENERATED BY github.com/golingon/lingon. DO NOT EDIT.

package cidaas_registration_field

import (
	terra "github.com/golingon/lingon/pkg/terra"
	hclwrite "github.com/hashicorp/hcl/v2/hclwrite"
)

type FieldDefinition struct {
	// InitialDate: string, optional
	InitialDate terra.StringValue `hcl:"initial_date,attr"`
	// InitialDateView: string, optional
	InitialDateView terra.StringValue `hcl:"initial_date_view,attr"`
	// MaxDate: string, optional
	MaxDate terra.StringValue `hcl:"max_date,attr"`
	// MaxLength: number, optional
	MaxLength terra.NumberValue `hcl:"max_length,attr"`
	// MinDate: string, optional
	MinDate terra.StringValue `hcl:"min_date,attr"`
	// MinLength: number, optional
	MinLength terra.NumberValue `hcl:"min_length,attr"`
}

type LocalTexts struct {
	// Locale: string, optional
	Locale terra.StringValue `hcl:"locale,attr"`
	// MaxLengthMsg: string, optional
	MaxLengthMsg terra.StringValue `hcl:"max_length_msg,attr"`
	// MinLengthMsg: string, optional
	MinLengthMsg terra.StringValue `hcl:"min_length_msg,attr"`
	// Name: string, required
	Name terra.StringValue `hcl:"name,attr" validate:"required"`
	// RequiredMsg: string, optional
	RequiredMsg terra.StringValue `hcl:"required_msg,attr"`
	// LocalTextsAttributes: min=0
	Attributes []LocalTextsAttributes `hcl:"attributes,attr" validate:"min=0"`
	// LocalTextsConsentLabel: optional
	ConsentLabel *LocalTextsConsentLabel `hcl:"consent_label,attr"`
}

type LocalTextsAttributes struct {
	// Key: string, required
	Key terra.StringValue `hcl:"key,attr" validate:"required"`
	// Value: string, required
	Value terra.StringValue `hcl:"value,attr" validate:"required"`
}

type LocalTextsConsentLabel struct {
	// Label: string, required
	Label terra.StringValue `hcl:"label,attr" validate:"required"`
	// LabelText: string, required
	LabelText terra.StringValue `hcl:"label_text,attr" validate:"required"`
}

type fieldDefinitionAttributes struct {
	ref terra.Reference
}

func (fd fieldDefinitionAttributes) InternalRef() (terra.Reference, error) {
	return fd.ref, nil
}

func (fd fieldDefinitionAttributes) InternalWithRef(ref terra.Reference) fieldDefinitionAttributes {
	return fieldDefinitionAttributes{ref: ref}
}

func (fd fieldDefinitionAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return fd.ref.InternalTokens()
}

func (fd fieldDefinitionAttributes) InitialDate() terra.StringValue {
	return terra.ReferenceAsString(fd.ref.Append("initial_date"))
}

func (fd fieldDefinitionAttributes) InitialDateView() terra.StringValue {
	return terra.ReferenceAsString(fd.ref.Append("initial_date_view"))
}

func (fd fieldDefinitionAttributes) MaxDate() terra.StringValue {
	return terra.ReferenceAsString(fd.ref.Append("max_date"))
}

func (fd fieldDefinitionAttributes) MaxLength() terra.NumberValue {
	return terra.ReferenceAsNumber(fd.ref.Append("max_length"))
}

func (fd fieldDefinitionAttributes) MinDate() terra.StringValue {
	return terra.ReferenceAsString(fd.ref.Append("min_date"))
}

func (fd fieldDefinitionAttributes) MinLength() terra.NumberValue {
	return terra.ReferenceAsNumber(fd.ref.Append("min_length"))
}

type localTextsAttributes struct {
	ref terra.Reference
}

func (lt localTextsAttributes) InternalRef() (terra.Reference, error) {
	return lt.ref, nil
}

func (lt localTextsAttributes) InternalWithRef(ref terra.Reference) localTextsAttributes {
	return localTextsAttributes{ref: ref}
}

func (lt localTextsAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return lt.ref.InternalTokens()
}

func (lt localTextsAttributes) Locale() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("locale"))
}

func (lt localTextsAttributes) MaxLengthMsg() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("max_length_msg"))
}

func (lt localTextsAttributes) MinLengthMsg() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("min_length_msg"))
}

func (lt localTextsAttributes) Name() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("name"))
}

func (lt localTextsAttributes) RequiredMsg() terra.StringValue {
	return terra.ReferenceAsString(lt.ref.Append("required_msg"))
}

func (lt localTextsAttributes) Attributes() terra.ListValue[localTextsAttributesAttributes] {
	return terra.ReferenceAsList[localTextsAttributesAttributes](lt.ref.Append("attributes"))
}

func (lt localTextsAttributes) ConsentLabel() localTextsConsentLabelAttributes {
	return terra.ReferenceAsSingle[localTextsConsentLabelAttributes](lt.ref.Append("consent_label"))
}

type localTextsAttributesAttributes struct {
	ref terra.Reference
}

func (a localTextsAttributesAttributes) InternalRef() (terra.Reference, error) {
	return a.ref, nil
}

func (a localTextsAttributesAttributes) InternalWithRef(ref terra.Reference) localTextsAttributesAttributes {
	return localTextsAttributesAttributes{ref: ref}
}

func (a localTextsAttributesAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return a.ref.InternalTokens()
}

func (a localTextsAttributesAttributes) Key() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("key"))
}

func (a localTextsAttributesAttributes) Value() terra.StringValue {
	return terra.ReferenceAsString(a.ref.Append("value"))
}

type localTextsConsentLabelAttributes struct {
	ref terra.Reference
}

func (cl localTextsConsentLabelAttributes) InternalRef() (terra.Reference, error) {
	return cl.ref, nil
}

func (cl localTextsConsentLabelAttributes) InternalWithRef(ref terra.Reference) localTextsConsentLabelAttributes {
	return localTextsConsentLabelAttributes{ref: ref}
}

func (cl localTextsConsentLabelAttributes) InternalTokens() (hclwrite.Tokens, error) {
	return cl.ref.InternalTokens()
}

func (cl localTextsConsentLabelAttributes) Label() terra.StringValue {
	return terra.ReferenceAsString(cl.ref.Append("label"))
}

func (cl localTextsConsentLabelAttributes) LabelText() terra.StringValue {
	return terra.ReferenceAsString(cl.ref.Append("label_text"))
}

type FieldDefinitionState struct {
	InitialDate     string  `json:"initial_date"`
	InitialDateView string  `json:"initial_date_view"`
	MaxDate         string  `json:"max_date"`
	MaxLength       float64 `json:"max_length"`
	MinDate         string  `json:"min_date"`
	MinLength       float64 `json:"min_length"`
}

type LocalTextsState struct {
	Locale       string                       `json:"locale"`
	MaxLengthMsg string                       `json:"max_length_msg"`
	MinLengthMsg string                       `json:"min_length_msg"`
	Name         string                       `json:"name"`
	RequiredMsg  string                       `json:"required_msg"`
	Attributes   []LocalTextsAttributesState  `json:"attributes"`
	ConsentLabel *LocalTextsConsentLabelState `json:"consent_label"`
}

type LocalTextsAttributesState struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

type LocalTextsConsentLabelState struct {
	Label     string `json:"label"`
	LabelText string `json:"label_text"`
}
