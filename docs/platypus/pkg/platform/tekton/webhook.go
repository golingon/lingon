// Copyright (c) 2023 Volvo Car Corporation
// SPDX-License-Identifier: Apache-2.0

// Code generated by lingon. EDIT AS MUCH AS YOU LIKE.

package tekton

import (
	"github.com/golingon/lingon/pkg/kubeutil"
	admissionregistrationv1 "k8s.io/api/admissionregistration/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

var WebhookPipelineDevMutatingwebhookconfigurations = &admissionregistrationv1.MutatingWebhookConfiguration{
	ObjectMeta: metav1.ObjectMeta{
		Labels: kubeutil.MergeLabels(labelsWebhook, labelsVersion),
		Name:   "webhook.pipeline.tekton.dev",
	},
	TypeMeta: kubeutil.TypeMutatingWebhookConfigurationV1,
	Webhooks: []admissionregistrationv1.MutatingWebhook{
		{
			AdmissionReviewVersions: []string{"v1"},
			ClientConfig: admissionregistrationv1.WebhookClientConfig{
				Service: &admissionregistrationv1.ServiceReference{
					Name:      WebhookFullName,
					Namespace: PipelinesNS.Name,
				},
			},
			FailurePolicy: P(admissionregistrationv1.Fail),
			Name:          "webhook.pipeline.tekton.dev",
			SideEffects:   P(admissionregistrationv1.SideEffectClassNone),
		},
	},
}

var ConfigWebhookPipelineDevValidatingwebhookconfigurations = &admissionregistrationv1.ValidatingWebhookConfiguration{
	ObjectMeta: metav1.ObjectMeta{
		Labels: kubeutil.MergeLabels(labelsWebhook, labelsVersion),
		Name:   "config.webhook.pipeline.tekton.dev",
	},
	TypeMeta: kubeutil.TypeValidatingWebhookConfigurationV1,
	Webhooks: []admissionregistrationv1.ValidatingWebhook{
		{
			AdmissionReviewVersions: []string{"v1"},
			ClientConfig: admissionregistrationv1.WebhookClientConfig{
				Service: &admissionregistrationv1.ServiceReference{
					Name:      WebhookFullName,
					Namespace: PipelinesNS.Name,
				},
			},
			FailurePolicy:  P(admissionregistrationv1.Fail),
			Name:           "config.webhook.pipeline.tekton.dev",
			ObjectSelector: &metav1.LabelSelector{MatchLabels: map[string]string{kubeutil.AppLabelPartOf: "tekton-pipelines"}},
			SideEffects:    P(admissionregistrationv1.SideEffectClassNone),
		},
	},
}

var ValidationWebhookPipelineDevValidatingwebhookconfigurations = &admissionregistrationv1.ValidatingWebhookConfiguration{
	ObjectMeta: metav1.ObjectMeta{
		Labels: kubeutil.MergeLabels(labelsWebhook, labelsVersion),
		Name:   "validation.webhook.pipeline.tekton.dev",
	},
	TypeMeta: kubeutil.TypeValidatingWebhookConfigurationV1,
	Webhooks: []admissionregistrationv1.ValidatingWebhook{
		{
			AdmissionReviewVersions: []string{"v1"},
			ClientConfig: admissionregistrationv1.WebhookClientConfig{
				Service: &admissionregistrationv1.ServiceReference{
					Name:      WebhookFullName,
					Namespace: PipelinesNS.Name,
				},
			},
			FailurePolicy: P(admissionregistrationv1.Fail),
			Name:          "validation.webhook.pipeline.tekton.dev",
			SideEffects:   P(admissionregistrationv1.SideEffectClassNone),
		},
	},
}
