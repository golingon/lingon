// Copyright (c) 2023 Volvo Car Corporation
// SPDX-License-Identifier: Apache-2.0

// Code generated by lingon. EDIT AS MUCH AS YOU LIKE.

package tekton

import (
	"github.com/golingon/lingon/pkg/kubeutil"
	rbacv1 "k8s.io/api/rbac/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

var PipelinesLeaderElectionRole = &rbacv1.Role{
	ObjectMeta: metav1.ObjectMeta{
		Labels:    labelsPipelines,
		Name:      "tekton-pipelines-leader-election",
		Namespace: PipelinesNS.Name,
	},
	Rules: []rbacv1.PolicyRule{
		{
			APIGroups: []string{"coordination.k8s.io"},
			Resources: []string{"leases"},
			Verbs: []string{
				"get",
				"list",
				"create",
				"update",
				"delete",
				"patch",
				"watch",
			},
		},
	},
	TypeMeta: kubeutil.TypeRoleV1,
}

var PipelinesResolversNamespaceRbacRole = &rbacv1.Role{
	ObjectMeta: metav1.ObjectMeta{
		Labels:    labelsResolvers,
		Name:      "tekton-pipelines-resolvers-namespace-rbac",
		Namespace: ResolversNS.Name,
	},
	Rules: []rbacv1.PolicyRule{
		{
			APIGroups: []string{},
			Resources: []string{"configmaps", "secrets"},
			Verbs:     []string{"get", "list", "update", "watch"},
		}, {
			APIGroups: []string{"coordination.k8s.io"},
			Resources: []string{"leases"},
			Verbs: []string{
				"get",
				"list",
				"create",
				"update",
				"delete",
				"patch",
				"watch",
			},
		},
	},
	TypeMeta: kubeutil.TypeRoleV1,
}

var PipelinesInfoRole = &rbacv1.Role{
	ObjectMeta: metav1.ObjectMeta{
		Labels:    labelsPipelines,
		Name:      "tekton-pipelines-info",
		Namespace: PipelinesNS.Name,
	},
	Rules: []rbacv1.PolicyRule{
		{
			APIGroups:     []string{},
			ResourceNames: []string{"pipelines-info"},
			Resources:     []string{"configmaps"},
			Verbs:         []string{"get"},
		},
	},
	TypeMeta: kubeutil.TypeRoleV1,
}

var PipelinesWebhookRole = &rbacv1.Role{
	ObjectMeta: metav1.ObjectMeta{
		Labels:    labelsWebhook,
		Name:      WebhookFullName,
		Namespace: PipelinesNS.Name,
	},
	Rules: []rbacv1.PolicyRule{
		{
			APIGroups: []string{},
			Resources: []string{"configmaps"},
			Verbs:     []string{"list", "watch"},
		}, {
			APIGroups: []string{},
			ResourceNames: []string{
				ConfigLoggingCM.Name,
				ConfigObservabilityCM.Name,
				ConfigLeaderElectionCM.Name,
				FeatureFlagsCM.Name,
			},
			Resources: []string{"configmaps"},
			Verbs:     []string{"get"},
		}, {
			APIGroups: []string{},
			Resources: []string{"secrets"},
			Verbs:     []string{"list", "watch"},
		}, {
			APIGroups:     []string{},
			ResourceNames: []string{WebhookCertsSecrets.Name},
			Resources:     []string{"secrets"},
			Verbs:         []string{"get", "update"},
		},
	},
	TypeMeta: kubeutil.TypeRoleV1,
}

var PipelinesControllerRole = &rbacv1.Role{
	ObjectMeta: metav1.ObjectMeta{
		Labels:    labelsController,
		Name:      ControllerFullName,
		Namespace: PipelinesNS.Name,
	},
	Rules: []rbacv1.PolicyRule{
		{
			APIGroups: []string{},
			Resources: []string{"configmaps"},
			Verbs:     []string{"list", "watch"},
		}, {
			APIGroups: []string{},
			ResourceNames: []string{
				ConfigLoggingCM.Name,
				ConfigObservabilityCM.Name,
				ConfigLeaderElectionCM.Name,
				ConfigRegistryCertCM.Name,
				FeatureFlagsCM.Name,
			},
			Resources: []string{"configmaps"},
			Verbs:     []string{"get"},
		},
	},
	TypeMeta: kubeutil.TypeRoleV1,
}
